{"version":3,"sources":["SecuredComponents/Login/Env.tsx","Components/Context/UserContext.tsx","SecuredComponents/Login/getCsrfToken.tsx","SecuredComponents/Login/Login.tsx","SecuredComponents/useToken.tsx","SecuredComponents/Test.tsx","Components/BoxBuilder/BoxBuilder.tsx","Components/ContactUs/ContactUs.tsx","Components/Links/LinkUtil.tsx","Components/GettingStarted/GettingStarted.tsx","Components/Home/Home.tsx","Components/RandomNames/RandomNames.tsx","Components/Controls/SwitchTextField.tsx","Components/RestFormGrid/RestFormGrid.tsx","Components/RestCrud/RestCrud.tsx","Components/Stack/Stack.tsx","Components/App/LoginDialog.tsx","Components/App/App2.tsx","Themes/createMyTheme.tsx","index.tsx"],"names":["env","d","API_HOST","defaultUser","hasToken","sessionStorage","getItem","user","token","UserContext","React","createContext","getCsrfToken","a","undefined","_csrfToken","fetch","credentials","response","json","data","csrfToken","setItem","loginUser","method","userpass","JSON","stringify","headers","body","key","Login","setToken","useState","email","setEmail","password","setPassword","useContext","handleSubmit","e","preventDefault","className","onSubmit","value","type","onChange","target","process","defaultValue","REACT_APP_NOT_SECRET_CODE","useToken","tokenString","parse","getToken","userToken","Test","props","lorem","LoremIpsum","sentencesPerParagraph","max","min","wordsPerSentence","withWidth","sizeItems","width","height","setHeight","boxWidth","setWidth","color","setColor","setValue","boxList","addBox","xs","setXs","sm","setSm","md","setMd","lg","setLg","xl","setXl","direction","setDirection","justify","setJustify","alignContent","setAlignContent","alignItems","setAlignItems","spacing","setSpacing","handleSizeChange","event","newSize","name","getSizePx","size","toString","concat","classes","makeStyles","theme","createStyles","root","padding","form","marginBottom","marginRight","minWidth","minHeight","palette","text","secondary","dataPaper","background","hint","formControl","margin","sizeControl","alignControl","primaryPaper","primary","main","mockCode","overflow","backgroundColor","info","contrastText","selectEmpty","marginTop","useStyles","AppBar","position","Tabs","newValue","aria-label","Tab","label","FormGroup","Grid","container","item","TextField","id","parseInt","variant","fullWidth","InputLabelProps","shrink","FormControl","InputLabel","Select","labelId","MenuItem","Button","onClick","newBox","prev","map","Paper","Typography","style","fontSize","textAlign","index","Box","m","bgcolor","p","generateWords","lightTheme","createMuiTheme","Object","assign","overrides","MuiIconButton","MuiButton","MUIRichTextEditor","paddingLeft","display","flexDirection","editor","maxHeight","toolbar","borderTop","placeHolder","anchorLink","textDecoration","darkTheme","maxWidth","getTheme","useTheme","url","MyEditor","dirty","setDirty","messages","setMessages","category","setCatagory","title","setTitle","expanded","setExpanded","useEffect","axios","get","getMessages","save","t","newMessage","post","paddingBottom","paddingTop","inputProps","maxLength","controls","customControls","component","startIcon","onMouseDown","disabled","editorState","convertToRaw","getCurrentContent","EditorState","createEmpty","inlineToolbar","toolbarButtonSize","state","hasText","Divider","message","Accordion","panel","isExpanded","AccordionSummary","expandIcon","aria-controls","date","AccordionDetails","readOnly","button","ValidatedLink","linkData","linkJSON","find","link","isValidated","okIfNotValid","Link","href","Tooltip","endIcon","actionsContainer","resetContainer","getStepContent","step","GettingStarted","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","handleJumpTo","Stepper","nonLinear","orientation","Step","StepLabel","StepContent","length","square","elevation","Home","g","genderNames","_cols","field","hide","_rows","givenName","middleInitial","surName","gender","ss","age","hireDate","Date","RandomNames","firstNamelist","setFirstNamelist","lastNameList","setLastNameList","loading","setLoading","rows","setRows","rowCount","setRowCount","outputAs","setOutputAs","maxAge","setMaxAge","minAge","setMinAge","inclusiveGender","setInclusiveGender","typeMap","Map","set","cols","setCols","menubox","justifyContent","marginLeft","box","hiddenbutton","csv","overflowY","showbutton","default","getFirstnames","fnl","getLastnames","lnl","calculate","fetchNames","_rowCount","getRandomInt","Math","floor","random","randNormal","u","v","num","sqrt","log","cos","PI","_r","ssGenerator","minFirstRange","minLastRange","String","fromCharCode","dayjs","daysOnJob","subtract","firstName","element","maxRange","lastName","genderName","genderIndex","push","next","toDate","copyToClip","copy","jsonToCsv","handleSwitchChange","c","col","currentTarget","checked","_newCols","handleInclusiveGenderChange","handleRowCountChange","handleOutputAsChange","handleMinAgeChange","handleMaxAgeChange","getVisibleColNames","visableColNames","forEach","result","row","values","header","join","jsonToShortJson","shortRows","shortRow","Consumer","FormControlLabel","control","Switch","placement","filter","density","pageSize","disableColumnSelector","autoHeight","columns","wordWrap","wordBreak","whiteSpace","uniqueRandNumberArray","r","indexOf","i","SS","substr","then","catch","err","console","error","implementedInputTypes","NumberFormatCustomFixed2","inputRef","other","getInputRef","decimalScale","fixedDecimalScale","thousandSeparator","isNumericString","NumberFormatCustomFloat","SwitchTextField","inputComponent","includes","borderBottom","Checkbox","InputProps","getRows","getColumns","getMetaFields","metaFields","f","headerName","colType","metaData","meta","actions","POST","fields","prop","detail","fieldDef","modelType","inputType","inputShrink","required","read_only","RestForm","wordwrap","overflowWrap","emptyMeta","setMetaFields","newData","setNewData","ok","statusText","resp","setResp","emptyCols","handleChange","primaryKeyFieldArray","pk","isUpdate","stripFormat","stripped","replaceAll","parseFloat","validate","reduce","acc","cur","urlX","requestOptions","Card","CardContent","gutterBottom","onRowSelected","updataField","RestCrud","TabPanel","children","role","hidden","aria-labelledby","a11yProps","paddingRight","linkdesc","intro","linkHeading","fontWeight","linkLabel","fontStyle","typeHeading","description","Stack","align","LoginDialog","onClose","open","handleCancel","handleLogin","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","removeItem","autoFocus","drawerWidth","brigtness","setBrightness","appliedTheme","lightThemeCfg","teal","dark","light","paper","MuiLink","options","createMyTheme","myStyles","drawer","breakpoints","up","flexShrink","appBar","appBar2","bottom","menuButton","brightness","right","clearToken","mixins","drawerPaper","content","flexGrow","mobileOpen","setMobileOpen","setOpen","showing","setShowing","showGalleryChildren","setShowGalleryChildren","handleToggleShowGalleryChildren","document","handleDrawerToggle","handleClose","x","handleThemeToggle","handleListItemClick","List","ListItem","ListItemText","Collapse","in","timeout","unmountOnExit","disablePadding","ThemeProvider","Toolbar","IconButton","edge","noWrap","Hidden","mdUp","implementation","Drawer","anchor","disableAutoFocus","ModalProps","keepMounted","smDown","ReactDOM","render","StrictMode","Provider","getElementById"],"mappings":"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","file":"static/js/main.ba3e8691.chunk.js","sourcesContent":["const env = () => {\r\n   const d = { API_HOST: 'https://www.restreact.com' }\r\n   if (process.env.NODE_ENV === 'development') {\r\n      d.API_HOST = 'http://localhost:8000'\r\n   } else if (process.env.NODE_ENV === 'production') {\r\n      d.API_HOST = 'https://www.restreact.com'\r\n   }\r\n   return d\r\n}\r\nexport default env\r\n","import React from 'react'\r\n\r\nexport interface IUserContext {\r\n   hasToken: boolean\r\n   user: string | null\r\n   token: string | null\r\n}\r\n\r\nexport const defaultUser: IUserContext = {\r\n   hasToken: sessionStorage.getItem('token') !== null,\r\n   user: sessionStorage.getItem('email'),\r\n   token: sessionStorage.getItem('token'),\r\n}\r\n\r\nconst UserContext = React.createContext<IUserContext>(defaultUser)\r\n\r\nexport default UserContext\r\n","import env from './Env'\r\n\r\nconst getCsrfToken = async () => {\r\n   let _csrfToken = sessionStorage.getItem('csrf_token')\r\n   if (_csrfToken === undefined || _csrfToken === null) {\r\n      const response = await fetch(`${env().API_HOST}/csrf/`, {\r\n         credentials: 'include',\r\n      })\r\n      const data = await response.json()\r\n      _csrfToken = data.csrfToken\r\n   }\r\n\r\n   if (_csrfToken === null) {\r\n      _csrfToken = 'NO_TOKEN'\r\n   } else {\r\n      sessionStorage.setItem('csrf_token', _csrfToken)\r\n   }\r\n\r\n   return _csrfToken\r\n}\r\nexport default getCsrfToken\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useContext, useState } from 'react'\r\nimport UserContext from '../../Components/Context/UserContext'\r\nimport env from './Env'\r\nimport getCsrfToken from './getCsrfToken'\r\nimport './Login.css'\r\n\r\ninterface ICredentials {\r\n   email: string\r\n   password: string\r\n}\r\n\r\ntype ThttpMethod = 'POST' | 'GET' | 'OPTIONS'\r\n\r\nconst loginUser = async (method: ThttpMethod, userpass: ICredentials) => {\r\n   const response = await fetch(`${env().API_HOST}/api/v1/users/auth/login/`, {\r\n      method,\r\n      headers: method === 'POST' ? { 'Content-Type': 'application/json', 'X-CSRFToken': await getCsrfToken() } : {},\r\n      credentials: 'include',\r\n      body: JSON.stringify(userpass),\r\n   })\r\n   const data = await response.json()\r\n   // needed to do some validation here to see if login was success\r\n   // handle errors\r\n   return data.key\r\n}\r\n\r\nconst Login = ({ setToken }: any) => {\r\n   const [email, setEmail] = useState('d@dd.com')\r\n   const [password, setPassword] = useState('postman!!01')\r\n   const user = useContext(UserContext)\r\n\r\n   const handleSubmit = async (e: { preventDefault: () => void }) => {\r\n      e.preventDefault()\r\n      const token = await loginUser('POST', { email, password })\r\n      user.hasToken = true\r\n      user.user = email\r\n\r\n      // eslint-disable-next-line no-shadow\r\n\r\n      setToken(token)\r\n   }\r\n\r\n   return (\r\n      <div className=\"login-wrapper\">\r\n         <h1>Please Log In</h1>\r\n\r\n         <h3>Feel free to use the default Username/Password to hack the system</h3>\r\n         <form onSubmit={handleSubmit}>\r\n            <label>\r\n               <p>Username</p>\r\n               <input value={email} type=\"text\" onChange={(e) => setEmail(e.target.value)} />\r\n            </label>\r\n            <label>\r\n               <p>Password</p>\r\n               <input value={password} type=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n            </label>\r\n            <div>\r\n               <button type=\"submit\">Submit</button>\r\n            </div>\r\n         </form>\r\n         <div>\r\n            <small>\r\n               You are running this application in <b>{process.env.NODE_ENV}</b> mode.\r\n            </small>\r\n            <form>\r\n               <input type=\"hidden\" defaultValue={process.env.REACT_APP_NOT_SECRET_CODE} />\r\n            </form>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nexport default Login\r\n","import { useState } from 'react'\r\n\r\n// use 'localStorage' to persist between sessions\r\nconst useToken = () => {\r\n   const getToken = () => {\r\n      const tokenString = sessionStorage.getItem('token')\r\n      if (tokenString === null) {\r\n         return undefined\r\n      }\r\n      return JSON.parse(tokenString)\r\n   }\r\n   const [token, setToken] = useState(getToken())\r\n\r\n   const saveToken = (userToken: { token: string }) => {\r\n      sessionStorage.setItem('token', JSON.stringify(userToken))\r\n      setToken(userToken)\r\n   }\r\n   return {\r\n      setToken: saveToken,\r\n      token,\r\n   }\r\n}\r\nexport default useToken\r\n\r\nexport const sessionHasToken = (): boolean => {\r\n   const tokenString = sessionStorage.getItem('token')\r\n   if (tokenString === null) {\r\n      return false\r\n   }\r\n   return true\r\n}\r\n\r\nexport const clearToken = () => {\r\n   sessionStorage.removeItem('token')\r\n}\r\n","import React from 'react'\r\nimport Login from './Login/Login'\r\nimport useToken from './useToken'\r\n\r\ninterface IProps {\r\n   user: any\r\n}\r\n\r\nconst Test = (props: IProps) => {\r\n   // eslint-disable-next-line no-unused-vars\r\n   const { token, setToken } = useToken()\r\n   const { user } = props\r\n\r\n   if (!user.hasToken) {\r\n      return <Login setToken={setToken} />\r\n   }\r\n\r\n   return <div>got here {user.user}</div>\r\n}\r\nexport default Test\r\n","/* eslint-disable react/no-array-index-key */\r\nimport {\r\n   AppBar,\r\n   Box,\r\n   Button,\r\n   createStyles,\r\n   FormControl,\r\n   FormGroup,\r\n   Grid,\r\n   GridContentAlignment,\r\n   GridDirection,\r\n   GridItemsAlignment,\r\n   GridJustification,\r\n   GridSize,\r\n   GridSpacing,\r\n   InputLabel,\r\n   makeStyles,\r\n   MenuItem,\r\n   Paper,\r\n   Select,\r\n   Tab,\r\n   Tabs,\r\n   TextField,\r\n   Theme,\r\n   Typography,\r\n   withWidth,\r\n   WithWidth,\r\n} from '@material-ui/core'\r\nimport { LoremIpsum } from 'lorem-ipsum'\r\nimport React, { useState } from 'react'\r\n\r\nconst lorem = new LoremIpsum({\r\n   sentencesPerParagraph: {\r\n      max: 8,\r\n      min: 4,\r\n   },\r\n   wordsPerSentence: {\r\n      max: 16,\r\n      min: 4,\r\n   },\r\n})\r\n\r\nconst BoxBuilder = (props: WithWidth) => {\r\n   type myBox = {\r\n      color: string\r\n      height: number\r\n      boxWidth: number\r\n   }\r\n\r\n   const sizeItems = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 'auto', 'true']\r\n   const spacingItems = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n   const justifyItems = ['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']\r\n   const alignContentItems = ['stretch', 'flex-start', 'center', 'flex-end', 'space-around', 'space-between']\r\n   const alignItemsItems = ['stretch', 'flex-start', 'center', 'flex-end', 'baseline']\r\n\r\n   const { width } = props\r\n\r\n   const [height, setHeight] = useState(75)\r\n   const [boxWidth, setWidth] = useState(200)\r\n   const [color, setColor] = useState('red')\r\n   const [value, setValue] = useState(0)\r\n   const [boxList, addBox] = useState<myBox[]>()\r\n   const [xs, setXs] = useState<GridSize>(12)\r\n   const [sm, setSm] = useState<GridSize>(6)\r\n   const [md, setMd] = useState<GridSize>(4)\r\n   const [lg, setLg] = useState<GridSize>(3)\r\n   const [xl, setXl] = useState<GridSize>(2)\r\n   const [direction, setDirection] = useState<GridDirection>('row')\r\n   const [justify, setJustify] = useState<GridJustification>('flex-start')\r\n   const [alignContent, setAlignContent] = useState<GridContentAlignment>('stretch')\r\n   const [alignItems, setAlignItems] = useState<GridItemsAlignment>('stretch')\r\n   const [spacing, setSpacing] = useState<GridSpacing>(1)\r\n\r\n   const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n      setValue(newValue)\r\n   }\r\n\r\n   const handleAlignItemsChange = (event: any) => {\r\n      const newValue = event.target.value as GridItemsAlignment\r\n      setAlignItems(newValue)\r\n   }\r\n\r\n   const handleAlignContentChange = (event: any) => {\r\n      const newValue = event.target.value as GridContentAlignment\r\n      setAlignContent(newValue)\r\n   }\r\n\r\n   const handleJustifyChange = (event: any) => {\r\n      setJustify(event.target.value as GridJustification)\r\n   }\r\n\r\n   const handleDirectionChange = (event: any) => {\r\n      setDirection(event.target.value as GridDirection)\r\n   }\r\n\r\n   const handleSpacingChange = (event: any) => {\r\n      setSpacing(event.target.value as GridSpacing)\r\n   }\r\n\r\n   const handleSizeChange = (event: any) => {\r\n      const newSize: GridSize = event.target.value\r\n\r\n      switch (event.target.name) {\r\n         case 'xs':\r\n            setXs(newSize)\r\n            break\r\n         case 'sm':\r\n            setSm(newSize)\r\n            break\r\n         case 'md':\r\n            setMd(newSize)\r\n            break\r\n         case 'lg':\r\n            setLg(newSize)\r\n            break\r\n         case 'xl':\r\n            setXl(newSize)\r\n            break\r\n\r\n         default:\r\n            break\r\n      }\r\n   }\r\n\r\n   const getSizePx = (size: number) => {\r\n      return size.toString().concat('px')\r\n   }\r\n\r\n   const handleHeightChange = (e: any) => {\r\n      setHeight(parseInt(e.target.value, 10))\r\n   }\r\n\r\n   const handleWidthChange = (e: any) => {\r\n      setWidth(parseInt(e.target.value, 10))\r\n   }\r\n\r\n   const handleColorChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n      setColor(event.target.value as string)\r\n   }\r\n\r\n   const handleSubmit = () => {\r\n      const newBox: myBox = { color, height, boxWidth }\r\n      addBox((prev) => {\r\n         if (prev) {\r\n            return prev.concat(newBox)\r\n         }\r\n         return [newBox]\r\n      })\r\n   }\r\n\r\n   const handleClear = () => {\r\n      addBox([])\r\n   }\r\n\r\n   const useStyles = makeStyles((theme: Theme) =>\r\n      createStyles({\r\n         root: {\r\n            padding: '0px',\r\n         },\r\n         form: {\r\n            marginBottom: theme.spacing(2),\r\n            marginRight: theme.spacing(2),\r\n            minWidth: '215px',\r\n         },\r\n         data: {\r\n            marginBottom: theme.spacing(2),\r\n            minHeight: '400px',\r\n\r\n            color: theme.palette.text.secondary,\r\n         },\r\n         dataPaper: {\r\n            marginBottom: theme.spacing(2),\r\n            minHeight: '400px',\r\n            background: theme.palette.text.hint,\r\n         },\r\n         formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n         },\r\n         sizeControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: '60px',\r\n         },\r\n         alignControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: '110px',\r\n         },\r\n         primaryPaper: {\r\n            background: theme.palette.primary.main,\r\n         },\r\n         mockCode: {\r\n            overflow: 'auto',\r\n            backgroundColor: theme.palette.info.main,\r\n            color: theme.palette.info.contrastText,\r\n         },\r\n         selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n         },\r\n      })\r\n   )\r\n   const classes = useStyles()\r\n\r\n   return (\r\n      <div>\r\n         <AppBar position=\"static\">\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n               <Tab label=\"Demo\" />\r\n               <Tab label=\"Instalation\" />\r\n               <Tab label=\"Usage\" />\r\n            </Tabs>\r\n         </AppBar>\r\n         {value === 0 ? (\r\n            <div>\r\n               <FormGroup>\r\n                  <Grid container direction=\"column\">\r\n                     <Grid container direction=\"row\">\r\n                        <Grid item xs={2}>\r\n                           <TextField\r\n                              type=\"number\"\r\n                              id=\"height\"\r\n                              key=\"height\"\r\n                              label=\"Height\"\r\n                              value={height}\r\n                              onChange={handleHeightChange}\r\n                              variant=\"filled\"\r\n                              fullWidth={false}\r\n                              InputLabelProps={{ shrink: true }}\r\n                           />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                           <TextField\r\n                              type=\"number\"\r\n                              id=\"width\"\r\n                              key=\"width\"\r\n                              label=\"Width\"\r\n                              value={boxWidth}\r\n                              onChange={handleWidthChange}\r\n                              variant=\"filled\"\r\n                              fullWidth={false}\r\n                              InputLabelProps={{ shrink: true }}\r\n                           />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                           <FormControl className={classes.formControl}>\r\n                              <InputLabel id=\"demo-simple-select-label\">Color</InputLabel>\r\n                              <Select\r\n                                 labelId=\"demo-simple-select-label\"\r\n                                 id=\"demo-simple-select\"\r\n                                 value={color}\r\n                                 onChange={handleColorChange}>\r\n                                 <MenuItem value=\"red\">Red</MenuItem>\r\n                                 <MenuItem value=\"purple\">Purple</MenuItem>\r\n                                 <MenuItem value=\"green\">Green</MenuItem>\r\n                                 <MenuItem value=\"blue\">Blue</MenuItem>\r\n                              </Select>\r\n                           </FormControl>\r\n                        </Grid>\r\n                     </Grid>\r\n                     <Grid container direction=\"row\">\r\n                        <Button variant=\"contained\" size=\"small\" onClick={handleSubmit} color=\"primary\">\r\n                           Add Box\r\n                        </Button>\r\n                        <Button variant=\"contained\" size=\"small\" onClick={handleClear} color=\"secondary\">\r\n                           Clear\r\n                        </Button>\r\n                     </Grid>\r\n                  </Grid>\r\n               </FormGroup>\r\n               <Grid container justify=\"flex-start\" direction=\"row\">\r\n                  <Grid item xs={3}>\r\n                     <FormControl fullWidth className={classes.alignControl}>\r\n                        <InputLabel>Direction</InputLabel>\r\n                        <Select value={direction} onChange={handleDirectionChange}>\r\n                           <MenuItem value=\"row\">row</MenuItem>\r\n                           <MenuItem value=\"column\">column</MenuItem>\r\n                           <MenuItem value=\"row-reverse\">row-reverse</MenuItem>\r\n                           <MenuItem value=\"column-reverse\">column-reverse</MenuItem>\r\n                        </Select>\r\n                     </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                     <FormControl className={classes.sizeControl}>\r\n                        <InputLabel>Spacing</InputLabel>\r\n                        <Select id=\"spacing\" name=\"spacing\" value={spacing} onChange={handleSpacingChange}>\r\n                           {spacingItems.map((item) => (\r\n                              <MenuItem value={item}>{item}</MenuItem>\r\n                           ))}\r\n                        </Select>\r\n                     </FormControl>\r\n                  </Grid>\r\n               </Grid>\r\n               <Grid container justify=\"flex-start\" direction=\"row\">\r\n                  <Grid item xs={4}>\r\n                     <FormControl fullWidth className={classes.alignControl}>\r\n                        <InputLabel>justify</InputLabel>\r\n                        <Select value={justify} onChange={handleJustifyChange}>\r\n                           {justifyItems.map((item) => (\r\n                              <MenuItem value={item}>{item}</MenuItem>\r\n                           ))}\r\n                        </Select>\r\n                     </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                     <FormControl fullWidth className={classes.alignControl}>\r\n                        <InputLabel>alignContent</InputLabel>\r\n                        <Select value={alignContent} onChange={handleAlignContentChange}>\r\n                           {alignContentItems.map((item) => (\r\n                              <MenuItem value={item}>{item}</MenuItem>\r\n                           ))}\r\n                        </Select>\r\n                     </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                     <FormControl fullWidth className={classes.alignControl}>\r\n                        <InputLabel> AlignItems</InputLabel>\r\n                        <Select value={alignItems} onChange={handleAlignItemsChange}>\r\n                           {alignItemsItems.map((item) => (\r\n                              <MenuItem value={item}>{item}</MenuItem>\r\n                           ))}\r\n                        </Select>\r\n                     </FormControl>\r\n                  </Grid>\r\n               </Grid>\r\n\r\n               <Grid container justify=\"flex-start\" direction=\"row\">\r\n                  <Grid item xs={2}>\r\n                     <FormControl className={classes.sizeControl}>\r\n                        <InputLabel>xs</InputLabel>\r\n                        <Select id=\"xs\" name=\"xs\" value={xs} onChange={handleSizeChange}>\r\n                           {sizeItems.map((item) => (\r\n                              <MenuItem value={item}>{item}</MenuItem>\r\n                           ))}\r\n                        </Select>\r\n                     </FormControl>\r\n                  </Grid>\r\n                  <Grid item sm={2}>\r\n                     <FormControl className={classes.sizeControl}>\r\n                        <InputLabel>sm</InputLabel>\r\n                        <Select id=\"sm\" name=\"sm\" value={sm} onChange={handleSizeChange}>\r\n                           {sizeItems.map((item) => (\r\n                              <MenuItem value={item}>{item}</MenuItem>\r\n                           ))}\r\n                        </Select>\r\n                     </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                     <FormControl className={classes.sizeControl}>\r\n                        <InputLabel>md</InputLabel>\r\n                        <Select id=\"md\" name=\"md\" value={md} onChange={handleSizeChange}>\r\n                           {sizeItems.map((item) => (\r\n                              <MenuItem value={item}>{item}</MenuItem>\r\n                           ))}\r\n                        </Select>\r\n                     </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                     <FormControl className={classes.sizeControl}>\r\n                        <InputLabel>lg</InputLabel>\r\n                        <Select id=\"lg\" name=\"lg\" value={lg} onChange={handleSizeChange}>\r\n                           {sizeItems.map((item) => (\r\n                              <MenuItem value={item}>{item}</MenuItem>\r\n                           ))}\r\n                        </Select>\r\n                     </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                     <FormControl className={classes.sizeControl}>\r\n                        <InputLabel>xl</InputLabel>\r\n                        <Select id=\"xl\" name=\"xl\" value={xl} onChange={handleSizeChange}>\r\n                           {sizeItems.map((item) => (\r\n                              <MenuItem value={item}>{item}</MenuItem>\r\n                           ))}\r\n                        </Select>\r\n                     </FormControl>\r\n                  </Grid>\r\n               </Grid>\r\n               <Paper className={classes.mockCode}>\r\n                  <Typography style={{ fontSize: 14 }} variant=\"subtitle1\">\r\n                     <pre>\r\n                        <code>\r\n                           {`<Grid container direction=\"${direction}\" justify=\"${justify}\" alignContent=\"${alignContent}\" alignItems=\"${alignItems}\" spacing={${spacing}}>`}\r\n                           <br />\r\n                           {`    <Grid item xs={${xs}} sm={${sm}} md={${md}} lg={${lg}} xl={${xl}}> ...</Grid>`}\r\n                           <br />\r\n                           {`    ...`}\r\n                           <br />\r\n                           {`</Grid>`}\r\n                        </code>\r\n                     </pre>\r\n                  </Typography>\r\n               </Paper>\r\n               <Paper className={classes.primaryPaper}>\r\n                  <Typography style={{ textAlign: 'center' }} variant=\"subtitle1\">\r\n                     Current width: {width}\r\n                  </Typography>\r\n               </Paper>\r\n\r\n               <Grid\r\n                  container\r\n                  direction={direction}\r\n                  justify={justify}\r\n                  alignContent={alignContent}\r\n                  spacing={spacing}\r\n                  alignItems={alignItems}>\r\n                  {boxList?.map((item, index) => (\r\n                     <Grid item xs={xs} sm={sm} md={md} lg={lg} key={index}>\r\n                        <Box\r\n                           style={{ minWidth: getSizePx(item.boxWidth) }}\r\n                           m={0}\r\n                           bgcolor={item.color}\r\n                           p={2}\r\n                           color=\"text.primary\">\r\n                           <Typography>\r\n                              Box ({index}) minWidth: {getSizePx(item.boxWidth)}{' '}\r\n                           </Typography>\r\n                           <Paper style={{ overflow: 'auto', height: getSizePx(item.height) }}>\r\n                              {lorem.generateWords(50)}\r\n                           </Paper>\r\n                        </Box>\r\n                     </Grid>\r\n                  ))}\r\n               </Grid>\r\n            </div>\r\n         ) : null}\r\n         {value === 1 ? <Typography>To Do: Instalation</Typography> : null}\r\n         {value === 2 ? <Typography>To Do: Usage</Typography> : null}\r\n      </div>\r\n   )\r\n}\r\nexport default withWidth()(BoxBuilder)\r\n","import {\r\n   Accordion,\r\n   AccordionDetails,\r\n   AccordionSummary,\r\n   Button,\r\n   Divider,\r\n   FormControl,\r\n   Grid,\r\n   InputLabel,\r\n   MenuItem,\r\n   Select,\r\n   TextField,\r\n} from '@material-ui/core'\r\nimport { createMuiTheme, MuiThemeProvider, useTheme } from '@material-ui/core/styles'\r\nimport ExpandMore from '@material-ui/icons/ExpandMore'\r\n// eslint-disable-next-line no-unused-vars\r\nimport TelegramIcon from '@material-ui/icons/Telegram'\r\nimport axios from 'axios'\r\nimport { convertToRaw, EditorState, RawDraftContentState } from 'draft-js'\r\nimport MUIRichTextEditor, { TToolbarComponentProps } from 'mui-rte'\r\nimport React, { useEffect, useState } from 'react'\r\nimport env from '../../SecuredComponents/Login/Env'\r\n\r\nconst lightTheme = createMuiTheme()\r\n\r\nObject.assign(lightTheme, {\r\n   overrides: {\r\n      MuiIconButton: {\r\n         root: {\r\n            color: '#546E7A',\r\n         },\r\n      },\r\n      MuiButton: {\r\n         root: {\r\n            color: '#546E7A',\r\n         },\r\n      },\r\n      MUIRichTextEditor: {\r\n         root: {\r\n            '& pre': {\r\n               marginTop: 0,\r\n               marginBottom: 0,\r\n               paddingLeft: 6,\r\n               overflow: 'auto',\r\n            },\r\n            '& blockQuote': {\r\n               marginTop: 0,\r\n               marginBottom: 0,\r\n               paddingLeft: 6,\r\n            },\r\n         },\r\n         container: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n         },\r\n         editor: {\r\n            padding: '20px',\r\n            height: '200px',\r\n            maxHeight: '200px',\r\n            overflow: 'auto',\r\n         },\r\n         toolbar: {\r\n            borderTop: '1px solid gray',\r\n            backgroundColor: '#CFD8DC',\r\n         },\r\n         placeHolder: {\r\n            paddingLeft: 20,\r\n            width: 'inherit',\r\n            position: 'static',\r\n         },\r\n         anchorLink: {\r\n            color: '#333333',\r\n            textDecoration: 'underline',\r\n         },\r\n      },\r\n   },\r\n})\r\nconst darkTheme = createMuiTheme({\r\n   palette: {\r\n      primary: {\r\n         main: '#90CAF9',\r\n      },\r\n   },\r\n})\r\n\r\nObject.assign(darkTheme, {\r\n   overrides: {\r\n      MuiIconButton: {\r\n         root: {\r\n            color: '#ECEFF1',\r\n         },\r\n      },\r\n      MuiButton: {\r\n         root: {\r\n            color: '#ECEFF1',\r\n         },\r\n      },\r\n      MUIRichTextEditor: {\r\n         root: {\r\n            maxWidth: 800,\r\n            '& pre': {\r\n               backgroundColor: '#37474F',\r\n               marginTop: 0,\r\n               marginBottom: 0,\r\n               paddingLeft: 6,\r\n               overflow: 'auto',\r\n            },\r\n            '& blockQuote': {\r\n               marginTop: 0,\r\n               color: '#ECEFF1',\r\n               marginBottom: 0,\r\n               paddingLeft: 6,\r\n            },\r\n         },\r\n         editor: {\r\n            padding: '20px',\r\n            height: '200px',\r\n            maxHeight: '200px',\r\n\r\n            overflow: 'auto',\r\n         },\r\n         toolbar: {\r\n            backgroundColor: '#37474F',\r\n            marginTop: 0,\r\n         },\r\n         placeHolder: {\r\n            paddingLeft: 20,\r\n            width: 'inherit',\r\n            position: 'static',\r\n         },\r\n         anchorLink: {\r\n            color: '#FFEB3B',\r\n            textDecoration: 'underline',\r\n         },\r\n      },\r\n   },\r\n})\r\n\r\nconst getTheme = () => {\r\n   const theme = useTheme()\r\n   if (theme.palette.type === 'light') {\r\n      return lightTheme\r\n   }\r\n\r\n   return darkTheme\r\n}\r\nconst url = `${env().API_HOST}/api/message/`\r\n\r\ntype TMessage = {\r\n   id: number\r\n   date: string\r\n   title: string\r\n   text: string\r\n   approved: boolean\r\n   category: string\r\n}\r\n\r\nconst MyEditor = () => {\r\n   const [dirty, setDirty] = useState(false)\r\n   const [messages, setMessages] = useState<TMessage[]>()\r\n   const [category, setCatagory] = useState('Comment')\r\n   const [title, setTitle] = useState('')\r\n   const [expanded, setExpanded] = useState<number>(-1)\r\n\r\n   useEffect(() => {\r\n      const getMessages = async () => {\r\n         const response = await axios.get(url)\r\n         setMessages(response.data)\r\n      }\r\n\r\n      getMessages()\r\n   }, [])\r\n\r\n   const save = async (data: RawDraftContentState) => {\r\n      const t = title === '' ? 'untitled' : title\r\n      const newMessage = {\r\n         text: JSON.stringify(data),\r\n         category,\r\n         title: t,\r\n      }\r\n      await axios.post(url, newMessage)\r\n      const response = await axios.get(url)\r\n      setMessages(response.data)\r\n   }\r\n\r\n   const MySendComponent = (props: TToolbarComponentProps) => {\r\n      return (\r\n         <Button\r\n            startIcon={<TelegramIcon />}\r\n            id={props.id}\r\n            variant=\"text\"\r\n            onMouseDown={props.onMouseDown}\r\n            disabled={!dirty}>\r\n            Send\r\n         </Button>\r\n      )\r\n   }\r\n\r\n   const handleChange = (state: EditorState) => {\r\n      setDirty(state.getCurrentContent().hasText())\r\n   }\r\n\r\n   const handleCategoryChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n      setCatagory(event.target.value as string)\r\n   }\r\n\r\n   const handleTitleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n      setTitle(event.target.value as string)\r\n   }\r\n\r\n   // eslint-disable-next-line no-unused-vars\r\n   const handleAccordianChange = (panel: number) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\r\n      setExpanded(isExpanded ? panel : -1)\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <form style={{}}>\r\n            <Grid style={{ paddingBottom: 0, paddingTop: 6 }} container direction=\"row\">\r\n               <TextField\r\n                  variant=\"filled\"\r\n                  value={title}\r\n                  id=\"title\"\r\n                  label=\"Title\"\r\n                  inputProps={{\r\n                     maxLength: 30,\r\n                  }}\r\n                  onChange={handleTitleChange}\r\n                  style={{ paddingBottom: 0, paddingTop: 6 }}\r\n               />\r\n               <FormControl variant=\"filled\" style={{ paddingBottom: 0, paddingTop: 6 }}>\r\n                  <InputLabel id=\"demo-simple-select-label\">Catigory</InputLabel>\r\n                  <Select\r\n                     labelId=\"demo-simple-select-label\"\r\n                     value={category}\r\n                     onChange={handleCategoryChange}\r\n                     id=\"category\">\r\n                     <MenuItem value=\"Comment\">Comment</MenuItem>\r\n                     <MenuItem value=\"Bug Report\">Bug Report</MenuItem>\r\n                     <MenuItem value=\"Feature Request\">Feature Request</MenuItem>\r\n                  </Select>\r\n               </FormControl>\r\n            </Grid>\r\n            <MuiThemeProvider theme={getTheme()}>\r\n               <MUIRichTextEditor\r\n                  controls={[\r\n                     'bold',\r\n                     'italic',\r\n                     'underline',\r\n                     'link',\r\n                     'numberList',\r\n                     'bulletList',\r\n                     'quote',\r\n                     'code',\r\n                     'undo',\r\n                     'redo',\r\n                     'send',\r\n                  ]}\r\n                  customControls={[\r\n                     {\r\n                        name: 'send',\r\n                        component: MySendComponent,\r\n                        type: 'callback',\r\n                        onClick: (editorState) => {\r\n                           save(convertToRaw(editorState.getCurrentContent()))\r\n                           return EditorState.createEmpty()\r\n                        },\r\n                     },\r\n                  ]}\r\n                  defaultValue=\"\"\r\n                  label=\"Type something here...\"\r\n                  inlineToolbar={false}\r\n                  toolbarButtonSize=\"medium\"\r\n                  onChange={handleChange}\r\n               />\r\n            </MuiThemeProvider>\r\n            <br />\r\n         </form>\r\n         <div>\r\n            <Divider />\r\n            {messages?.map((message: TMessage, index: number) => {\r\n               return (\r\n                  <Accordion expanded={expanded === index} onChange={handleAccordianChange(index)}>\r\n                     <AccordionSummary\r\n                        expandIcon={<ExpandMore />}\r\n                        aria-label=\"Expand\"\r\n                        aria-controls=\"additional-actions1-content\"\r\n                        id=\"additional-actions1-header\">\r\n                        {'Created: '} {message.date} {`,  Title: `} {message.title} {`,  Category: `} {message.category}\r\n                     </AccordionSummary>\r\n                     <AccordionDetails>\r\n                        <div>\r\n                           <MuiThemeProvider theme={getTheme()}>\r\n                              <MUIRichTextEditor defaultValue={message.text} controls={[]} readOnly={true} />\r\n                           </MuiThemeProvider>\r\n                        </div>\r\n                     </AccordionDetails>\r\n                  </Accordion>\r\n               )\r\n            })}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default MyEditor\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable no-console */\r\nimport { Button, createStyles, Link, makeStyles, Theme, Tooltip } from '@material-ui/core'\r\nimport LinkOffIcon from '@material-ui/icons/LinkOff'\r\nimport React from 'react'\r\nimport linkJSON from './links.json'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n   createStyles({\r\n      button: {\r\n         margin: theme.spacing(1),\r\n      },\r\n   })\r\n)\r\n\r\nexport interface IProps {\r\n   label: string\r\n}\r\n\r\nexport const ValidatedLink = (props: IProps): any => {\r\n   const { label } = props\r\n   const classes = useStyles()\r\n\r\n   const linkData = linkJSON.find((link) => link.label === label)\r\n\r\n   if (linkData?.isValidated || linkData?.okIfNotValid) {\r\n      return (\r\n         <Link target=\"_blank\" href={linkData.url}>\r\n            {linkData.label}\r\n         </Link>\r\n      )\r\n   }\r\n   return (\r\n      <Tooltip title=\"Brooken link\">\r\n         <Button variant=\"text\" color=\"inherit\" size=\"small\" className={classes.button} endIcon={<LinkOffIcon />}>\r\n            {' '}\r\n            {`${linkData?.label}`}\r\n         </Button>\r\n      </Tooltip>\r\n   )\r\n}\r\n","import { StepLabel } from '@material-ui/core'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Step from '@material-ui/core/Step'\r\nimport StepContent from '@material-ui/core/StepContent'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport React from 'react'\r\nimport { ValidatedLink } from '../Links/LinkUtil'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n   createStyles({\r\n      root: {\r\n         width: '100%',\r\n      },\r\n      button: {\r\n         marginTop: theme.spacing(0),\r\n         marginRight: theme.spacing(1),\r\n      },\r\n      actionsContainer: {\r\n         marginBottom: theme.spacing(0),\r\n      },\r\n      resetContainer: {\r\n         padding: theme.spacing(0),\r\n      },\r\n   })\r\n)\r\n\r\nfunction getSteps() {\r\n   return ['Install VSCode', 'Install django', 'Install Rest', 'Create React application']\r\n}\r\n\r\nfunction getStepContent(step: number) {\r\n   switch (step) {\r\n      case 0:\r\n         return (\r\n            <div>\r\n               <span>Install </span>\r\n               <ValidatedLink label=\"VSCode\" />\r\n               <span> it is a good editor. Most of the remaining steps can be done within VSCode.</span>\r\n            </div>\r\n         )\r\n      case 1:\r\n         return (\r\n            <div>\r\n               <span>Use the </span>\r\n               <ValidatedLink label=\"django Quick Install Guide\" />\r\n               <span>\r\n                  {' '}\r\n                  This will install Python and django. A database (SQLite) for your local host is included with the\r\n                  instalation.\r\n               </span>\r\n            </div>\r\n         )\r\n      case 2:\r\n         return (\r\n            <div>\r\n               <span>Use the </span>\r\n               <ValidatedLink label=\"Rest framework\" />\r\n               <span> instalation instructions.</span>\r\n            </div>\r\n         )\r\n      case 3:\r\n         return (\r\n            <div>\r\n               <span>Go to the </span>\r\n               <ValidatedLink label=\"React\" />\r\n               <span> for documentation. Use instruction for setting up a boilerplate workspace at </span>\r\n               <ValidatedLink label=\"create-react-app\" />\r\n            </div>\r\n         )\r\n      default:\r\n         return 'Unknown step'\r\n   }\r\n}\r\n\r\nexport default function GettingStarted() {\r\n   const classes = useStyles()\r\n   const [activeStep, setActiveStep] = React.useState(0)\r\n   const steps = getSteps()\r\n\r\n   const handleNext = () => {\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1)\r\n   }\r\n\r\n   const handleBack = () => {\r\n      setActiveStep((prevActiveStep) => prevActiveStep - 1)\r\n   }\r\n\r\n   const handleJumpTo = (step: number) => {\r\n      setActiveStep(activeStep === step ? -1 : step)\r\n   }\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <Stepper activeStep={activeStep} nonLinear orientation=\"vertical\">\r\n            {steps.map((label, index) => (\r\n               <Step key={label}>\r\n                  <StepLabel>\r\n                     <Button onClick={() => handleJumpTo(index)}>{label}</Button>\r\n                  </StepLabel>\r\n                  <StepContent>\r\n                     <Typography>{getStepContent(index)}</Typography>\r\n                     <div className={classes.actionsContainer}>\r\n                        <div>\r\n                           <Button\r\n                              variant=\"contained\"\r\n                              size=\"small\"\r\n                              color=\"primary\"\r\n                              disabled={activeStep === 0}\r\n                              onClick={handleBack}\r\n                              className={classes.button}>\r\n                              Back\r\n                           </Button>\r\n                           <Button\r\n                              variant=\"contained\"\r\n                              size=\"small\"\r\n                              color=\"primary\"\r\n                              onClick={handleNext}\r\n                              className={classes.button}>\r\n                              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                           </Button>\r\n                        </div>\r\n                     </div>\r\n                  </StepContent>\r\n               </Step>\r\n            ))}\r\n         </Stepper>\r\n         {activeStep === steps.length && (\r\n            <Paper square elevation={0} className={classes.resetContainer}>\r\n               <Typography>All steps completed - you&apos;re finished</Typography>\r\n               <Button onClick={() => handleJumpTo(0)} className={classes.button}>\r\n                  Reset\r\n               </Button>\r\n            </Paper>\r\n         )}\r\n      </div>\r\n   )\r\n}\r\n","import { Grid, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst Home = () => {\r\n   return (\r\n      <Grid container direction=\"column\" alignContent=\"center\">\r\n         <Grid item>\r\n            <Typography style={{ margin: 20 }} variant=\"h3\" component=\"h3\">\r\n               Welcome\r\n            </Typography>\r\n         </Grid>\r\n         <Grid item>\r\n            <Typography style={{ margin: 20 }} variant=\"h6\" component=\"p\">\r\n               Being un-opinionated is a virtue but it can also be confusing. There are so many ways to do even the most\r\n               fundamental things. This site takes you through one way of creating a basic CRUD (Create-Update-Delete)\r\n               application using Rest Framework and React. So, while there are countless other ways to do this, this\r\n               approach is based on the following tools:\r\n            </Typography>\r\n         </Grid>\r\n         <Grid item>\r\n            <Typography>\r\n               <ul>\r\n                  <li>SQLite and MySQL (Examples will show MySql syntax but any database will do)</li>\r\n                  <li>Python django/Rest framework (handles server side operations)</li>\r\n                  <li>pythonanywhere (optional remote host) </li>\r\n                  <li>React (JavaScript/TypeScript client side operations)</li>\r\n                  <li>Material-ui (pretty buttons and whatnot for React)</li>\r\n               </ul>\r\n            </Typography>\r\n         </Grid>\r\n      </Grid>\r\n   )\r\n}\r\nexport default Home\r\n","/* eslint-disable no-nested-ternary */\r\nimport {\r\n   Button,\r\n   createStyles,\r\n   FormControl,\r\n   FormControlLabel,\r\n   FormGroup,\r\n   Grid,\r\n   InputLabel,\r\n   makeStyles,\r\n   MenuItem,\r\n   Paper,\r\n   Select,\r\n   Switch,\r\n   TextField,\r\n   Theme,\r\n   Tooltip,\r\n   Typography,\r\n} from '@material-ui/core'\r\nimport { DataGrid, GridColumns } from '@material-ui/data-grid'\r\nimport CreateSharpIcon from '@material-ui/icons/CreateSharp'\r\nimport copy from 'clipboard-copy'\r\nimport dayjs from 'dayjs'\r\nimport React, { useEffect, useState } from 'react'\r\nimport UserContext from '../Context/UserContext'\r\n\r\nconst genderNames: string[] = [\r\n   'Not disclosed',\r\n   'Man',\r\n   'Woman',\r\n   'Transgender',\r\n   'Genderqueer',\r\n   'Agender',\r\n   'Genderless',\r\n   'Non-binary',\r\n   'Cis Man',\r\n   'Cis Woman',\r\n   'Trans Man',\r\n   'Trans Woman',\r\n   'Third Gender',\r\n   'Two-Spirit',\r\n   'Bigender',\r\n   'Genderfluid',\r\n   'Undecided',\r\n]\r\n\r\nconst _cols: GridColumns = [\r\n   //  { field: 'id' },\r\n   { field: 'givenName', hide: false },\r\n   { field: 'middleInitial', hide: false },\r\n   { field: 'surName', hide: false },\r\n   { field: 'gender', width: 150, hide: false },\r\n   { field: 'ss', width: 150, hide: false },\r\n   { field: 'age', type: 'number', width: 90, hide: false },\r\n   { field: 'hireDate', type: 'date', width: 250, hide: false },\r\n]\r\nconst _rows: TRow[] = [\r\n   //  { field: 'id' },\r\n   { id: 0, givenName: '', middleInitial: '', surName: '', gender: '', ss: '', age: 0, hireDate: new Date() },\r\n]\r\n\r\ntype TFirstName = {\r\n   givenName: string\r\n   gender: string\r\n   minRange: number\r\n   maxRange: number\r\n}\r\ntype TLastName = {\r\n   surName: string\r\n   minRange: number\r\n   maxRange: number\r\n}\r\ntype TRow = {\r\n   id: number\r\n   givenName: string\r\n   middleInitial: string\r\n   surName: string\r\n   gender: string\r\n   ss: string\r\n   age: number\r\n   hireDate: Date\r\n}\r\n\r\ninterface IProps {\r\n   url: string\r\n}\r\n\r\nconst RandomNames = (props: IProps) => {\r\n   const [firstNamelist, setFirstNamelist] = useState<TFirstName[]>()\r\n   const [lastNameList, setLastNameList] = useState<TLastName[]>()\r\n   const [loading, setLoading] = useState(true)\r\n   const [rows, setRows] = useState<TRow[]>(_rows)\r\n   const [rowCount, setRowCount] = useState(100)\r\n   const [outputAs, setOutputAs] = useState('DataGrid')\r\n   const [maxAge, setMaxAge] = useState<number>(65)\r\n   const [minAge, setMinAge] = useState<number>(20)\r\n   const [inclusiveGender, setInclusiveGender] = useState(true)\r\n   const typeMap = new Map()\r\n\r\n   typeMap.set('id', { type: 'number' })\r\n   typeMap.set('givenName', { type: 'string' })\r\n   typeMap.set('middleInitial', { type: 'string' })\r\n   typeMap.set('surName', { type: 'string' })\r\n   typeMap.set('gender', { type: 'string' })\r\n   typeMap.set('ss', { type: 'string' })\r\n   typeMap.set('age', { type: 'number' })\r\n   typeMap.set('hireDate', { type: 'Date' })\r\n\r\n   // eslint-disable-next-line no-unused-vars\r\n   const [cols, setCols] = useState<GridColumns>(_cols)\r\n   //   const uniqueRandNumberArray: number[] = []\r\n   const useStyles = makeStyles((theme: Theme) =>\r\n      createStyles({\r\n         menubox: {\r\n            height: '50px',\r\n            paddingTop: theme.spacing(3),\r\n            paddingLeft: theme.spacing(3),\r\n            maxWidth: '800px',\r\n            display: 'flex',\r\n            justifyContent: 'flex-start',\r\n            alignItems: 'flex-end',\r\n            '& .MuiSelect-selectMenu': {\r\n               minWidth: '80px',\r\n               marginLeft: '10px',\r\n            },\r\n         },\r\n         box: {\r\n            height: '30px',\r\n            maxWidth: '700px',\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            alignItems: 'flex-end',\r\n         },\r\n         hiddenbutton: {\r\n            display: 'none',\r\n         },\r\n         csv: {\r\n            overflowY: 'scroll',\r\n         },\r\n         showbutton: {\r\n            display: 'flex',\r\n         },\r\n         dataPaper: {\r\n            background: theme.palette.background.default,\r\n         },\r\n      })\r\n   )\r\n\r\n   const classes = useStyles()\r\n\r\n   useEffect(() => {\r\n      const fetchNames = async () => {\r\n         const fnl = await getFirstnames(`${props.url}firstname/`)\r\n         setFirstNamelist(fnl)\r\n         const lnl = await getLastnames(`${props.url}lastname/`)\r\n         setLastNameList(lnl)\r\n         calculate(rowCount, fnl, lnl)\r\n      }\r\n\r\n      fetchNames()\r\n   }, [])\r\n\r\n   const callCalculate = () => {\r\n      if (rowCount && firstNamelist && lastNameList) {\r\n         calculate(rowCount, firstNamelist, lastNameList)\r\n      }\r\n   }\r\n\r\n   const calculate = (_rowCount: number, fnl: TFirstName[], lnl: TLastName[]) => {\r\n      setRows([])\r\n      setLoading(true)\r\n\r\n      const getRandomInt = (max: number): number => {\r\n         return Math.floor(Math.random() * Math.floor(max))\r\n      }\r\n\r\n      const randNormal = (min: number, max: number): number => {\r\n         let u = 0\r\n         let v = 0\r\n         while (u === 0) u = Math.random()\r\n         while (v === 0) v = Math.random()\r\n         let num = Math.sqrt(-8.0 * Math.log(u)) * Math.cos(8.0 * Math.PI * v)\r\n         num = num / 10.0 + 0.5 // Translate to 0 -> 1\r\n         if (num > 1 || num < 0) return randNormal(min, max) // resample between 0 and 1\r\n         return num * (max - min) + min\r\n      }\r\n\r\n      const _r: TRow[] = []\r\n      const ssGenerator: IterableIterator<string> = g(_rowCount)\r\n      for (let index = 0; index < _rowCount; index += 1) {\r\n         const minFirstRange = getRandomInt(192908123)\r\n         const minLastRange = getRandomInt(154575750)\r\n         const middleInitial = String.fromCharCode(getRandomInt(22) + 65)\r\n         const age = Math.floor(randNormal(minAge, maxAge))\r\n         let hireDate = dayjs()\r\n         const daysOnJob = getRandomInt(age - minAge) * 0.65 * 365 + getRandomInt(365)\r\n         hireDate = hireDate.subtract(Math.floor(daysOnJob), 'days')\r\n         const firstName = fnl.find((element) => element.maxRange >= minFirstRange)\r\n         const lastName = lnl.find((element) => element.maxRange >= minLastRange)\r\n         let genderName = firstName?.gender === 'Male' ? 'Male' : 'Female'\r\n         if (inclusiveGender) {\r\n            genderName = genderName === 'Male' ? 'Man' : 'Woman'\r\n         }\r\n         const genderIndex = getRandomInt(1600)\r\n         if (genderIndex < genderNames.length && inclusiveGender) {\r\n            genderName = genderNames[genderIndex]\r\n         }\r\n\r\n         _r.push({\r\n            id: index,\r\n            givenName: firstName?.givenName || '',\r\n            middleInitial,\r\n            surName: lastName?.surName || '',\r\n            gender: genderName,\r\n            ss: ssGenerator.next().value,\r\n            age,\r\n            hireDate: hireDate.toDate(),\r\n         })\r\n      }\r\n\r\n      setRows(_r)\r\n      setLoading(false)\r\n   }\r\n\r\n   const copyToClip = () => {\r\n      if (outputAs === 'JSON') {\r\n         copy(JSON.stringify(rows))\r\n      } else {\r\n         copy(jsonToCsv())\r\n      }\r\n   }\r\n\r\n   // eslint-disable-next-line no-unused-vars\r\n   const handleSwitchChange = (e: React.ChangeEvent<{ checked: boolean; name: string }>) => {\r\n      setCols((prev) => {\r\n         const c = prev.find((col) => col.field === e.currentTarget.name)\r\n         if (c) {\r\n            c.hide = !e.target.checked\r\n         }\r\n         const _newCols: GridColumns = [\r\n            //  { field: 'id' },\r\n            { field: 'givenName', hide: false },\r\n            { field: 'middleInitial', hide: false },\r\n            { field: 'surName', hide: false },\r\n            { field: 'gender', width: 150, hide: false },\r\n            { field: 'ss', width: 150, hide: false },\r\n            { field: 'age', type: 'number', width: 90, hide: false },\r\n            { field: 'hireDate', type: 'date', width: 250, hide: false },\r\n         ]\r\n\r\n         for (let index = 0; index < _newCols.length; index += 1) {\r\n            _newCols[index].hide = prev[index].hide\r\n         }\r\n\r\n         return _newCols\r\n      })\r\n   }\r\n\r\n   const handleInclusiveGenderChange = (e: any) => {\r\n      setInclusiveGender(e.target.checked)\r\n   }\r\n\r\n   const handleRowCountChange = (e: React.ChangeEvent<{ value: number }>) => {\r\n      setRowCount(e.target.value)\r\n      if (firstNamelist && lastNameList) {\r\n         calculate(e.target.value, firstNamelist, lastNameList)\r\n      }\r\n   }\r\n\r\n   const handleOutputAsChange = (e: React.ChangeEvent<{ value: string }>) => {\r\n      setOutputAs(e.target.value)\r\n   }\r\n\r\n   const handleMinAgeChange = (e: any) => {\r\n      setMinAge(parseInt(e.target.value, 10))\r\n   }\r\n\r\n   const handleMaxAgeChange = (e: any) => {\r\n      setMaxAge(parseInt(e.target.value, 10))\r\n   }\r\n\r\n   const getVisibleColNames = (): string[] => {\r\n      const visableColNames: string[] = []\r\n      cols.forEach((col) => {\r\n         if (!col.hide) {\r\n            visableColNames.push(col.field)\r\n         }\r\n      })\r\n      return visableColNames\r\n   }\r\n\r\n   const jsonToCsv = (): string => {\r\n      if (!rows) {\r\n         return ''\r\n      }\r\n      const headers = getVisibleColNames()\r\n      const replacer = (value: any) => {\r\n         return value === null ? '' : value\r\n      }\r\n      let result = ''\r\n      rows.forEach((row: { [index: string]: any }) => {\r\n         const values: any = []\r\n         headers.forEach((header) => {\r\n            values.push(JSON.stringify(replacer(row[header])))\r\n         })\r\n         result = result.concat(values.join(',').concat('\\n'))\r\n      })\r\n\r\n      return result\r\n   }\r\n\r\n   const jsonToShortJson = (): string => {\r\n      const headers = getVisibleColNames()\r\n\r\n      const shortRows: any[] = []\r\n\r\n      rows.forEach((row) => {\r\n         const shortRow: any = {}\r\n\r\n         headers.forEach((header) => {\r\n            switch (header) {\r\n               case 'id':\r\n                  shortRow.id = row.id\r\n                  break\r\n               case 'givenName':\r\n                  shortRow.givenName = row.givenName\r\n                  break\r\n               case 'surName':\r\n                  shortRow.surName = row.surName\r\n                  break\r\n               case 'middleInitial':\r\n                  shortRow.middleInitial = row.middleInitial\r\n                  break\r\n               case 'gender':\r\n                  shortRow.gender = row.gender\r\n                  break\r\n               case 'ss':\r\n                  shortRow.ss = row.ss\r\n                  break\r\n               case 'hireDate':\r\n                  shortRow.hireDate = row.hireDate\r\n                  break\r\n               case 'age':\r\n                  shortRow.age = row.age\r\n                  break\r\n               default:\r\n                  break\r\n            }\r\n         })\r\n         shortRows.push(shortRow)\r\n      })\r\n\r\n      return JSON.stringify(shortRows)\r\n   }\r\n\r\n   return (\r\n      <UserContext.Consumer>\r\n         {(u) => (\r\n            <Paper elevation={0} style={{ padding: '8px' }}>\r\n               {u.user}\r\n               <Grid container direction=\"row\" spacing={3}>\r\n                  <Grid item>\r\n                     <FormGroup>\r\n                        {cols.map((col) => (\r\n                           <FormControlLabel\r\n                              control={\r\n                                 <Switch\r\n                                    size=\"small\"\r\n                                    checked={!col.hide}\r\n                                    onChange={handleSwitchChange}\r\n                                    name={col.field}\r\n                                    color=\"primary\"\r\n                                 />\r\n                              }\r\n                              label={col.field}\r\n                           />\r\n                        ))}\r\n                     </FormGroup>\r\n                  </Grid>\r\n                  <Grid item>\r\n                     <FormGroup>\r\n                        <FormControlLabel\r\n                           control={\r\n                              <Switch\r\n                                 size=\"small\"\r\n                                 onChange={handleInclusiveGenderChange}\r\n                                 checked={inclusiveGender}\r\n                                 value={inclusiveGender}\r\n                                 color=\"primary\"\r\n                              />\r\n                           }\r\n                           label=\"Use inclusive gender roles\"\r\n                        />\r\n\r\n                        <TextField\r\n                           label=\"Maximum age\"\r\n                           onChange={handleMaxAgeChange}\r\n                           value={maxAge}\r\n                           type=\"number\"\r\n                           color=\"primary\"\r\n                        />\r\n\r\n                        <TextField\r\n                           label=\"Minimum age when hired\"\r\n                           onChange={handleMinAgeChange}\r\n                           value={minAge}\r\n                           type=\"number\"\r\n                           color=\"primary\"\r\n                        />\r\n\r\n                        <Tooltip title=\"Use preferences to generate a new set of employees\" placement=\"bottom-start\">\r\n                           <Button color=\"primary\" variant=\"contained\" onClick={() => callCalculate()}>\r\n                              Refresh\r\n                           </Button>\r\n                        </Tooltip>\r\n                     </FormGroup>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                     <Paper className={classes.dataPaper} style={{ padding: '10px' }}>\r\n                        <Typography>\r\n                           <pre>\r\n                              {'type TEmployee = {'}\r\n                              {cols\r\n                                 .filter((col) => !col.hide)\r\n                                 .map((col) => (\r\n                                    <div>{`   ${col.field}: ${typeMap.get(col.field).type}`}</div>\r\n                                 ))}\r\n                              {'}'}\r\n                           </pre>\r\n                        </Typography>\r\n                     </Paper>\r\n                  </Grid>\r\n               </Grid>\r\n\r\n               <Paper className={classes.menubox} component=\"span\">\r\n                  <FormControl>\r\n                     <InputLabel id=\"demo-simple-select-label\">Count</InputLabel>\r\n                     <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={rowCount}\r\n                        onChange={handleRowCountChange}>\r\n                        <MenuItem value={100}>100</MenuItem>\r\n                        <MenuItem value={1000}>1,000</MenuItem>\r\n                        <MenuItem value={10000}>10,000</MenuItem>\r\n                        <MenuItem value={50000}>50,000</MenuItem>\r\n                     </Select>\r\n                  </FormControl>\r\n                  <FormControl>\r\n                     <InputLabel id=\"demo-simple-select-label\">Output as</InputLabel>\r\n                     <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={outputAs}\r\n                        onChange={handleOutputAsChange}>\r\n                        <MenuItem value=\"DataGrid\">Data Grid</MenuItem>\r\n                        <MenuItem value=\"JSON\">JSON</MenuItem>\r\n                        <MenuItem value=\"csv\">Comma Separated</MenuItem>\r\n                     </Select>\r\n                  </FormControl>\r\n                  <Button\r\n                     endIcon={<CreateSharpIcon />}\r\n                     size=\"small\"\r\n                     classes={outputAs === 'DataGrid' ? { root: classes.hiddenbutton } : { root: classes.showbutton }}\r\n                     onClick={copyToClip}>\r\n                     Copy to clipboard\r\n                  </Button>\r\n               </Paper>\r\n\r\n               {outputAs === 'DataGrid' ? (\r\n                  <Paper elevation={0} style={{ marginBottom: '20px', paddingLeft: '20px' }}>\r\n                     <Paper className={classes.dataPaper} elevation={9} style={{ height: '400px' }}>\r\n                        <DataGrid\r\n                           density=\"compact\"\r\n                           loading={loading}\r\n                           pageSize={100}\r\n                           disableColumnSelector={true}\r\n                           autoHeight={false}\r\n                           rows={rows}\r\n                           columns={cols}\r\n                        />\r\n                     </Paper>\r\n                  </Paper>\r\n               ) : outputAs === 'JSON' ? (\r\n                  <Paper\r\n                     className={classes.dataPaper}\r\n                     id=\"json\"\r\n                     elevation={9}\r\n                     style={{\r\n                        wordWrap: 'break-word',\r\n                        wordBreak: 'break-all',\r\n                        overflow: 'auto',\r\n                        maxWidth: '700px',\r\n                        maxHeight: '400px',\r\n                     }}>\r\n                     {jsonToShortJson()}\r\n                  </Paper>\r\n               ) : (\r\n                  <Paper\r\n                     className={classes.dataPaper}\r\n                     id=\"json\"\r\n                     elevation={9}\r\n                     style={{ maxWidth: '700px', maxHeight: '400px', whiteSpace: 'break-spaces', overflow: 'auto' }}>\r\n                     <pre>{jsonToCsv()}</pre>\r\n                  </Paper>\r\n               )}\r\n            </Paper>\r\n         )}\r\n      </UserContext.Consumer>\r\n   )\r\n}\r\nexport default RandomNames\r\n\r\nfunction* g(rowCount: number): IterableIterator<string> {\r\n   const uniqueRandNumberArray: number[] = []\r\n\r\n   while (uniqueRandNumberArray.length < rowCount) {\r\n      const r = Math.floor(Math.random() * Math.floor(899999999)) + 100000000\r\n      if (uniqueRandNumberArray.indexOf(r) === -1) {\r\n         uniqueRandNumberArray.push(r)\r\n      }\r\n   }\r\n   for (let i = 0; i < rowCount; i += 1) {\r\n      const SS: string = uniqueRandNumberArray[i].toString()\r\n      yield `${SS.substr(0, 3)}-${SS.substr(3, 2)}-${SS.substr(5, 4)}`\r\n   }\r\n}\r\n\r\nconst getFirstnames = async (url: string): Promise<TFirstName[]> => {\r\n   const r: TFirstName[] = await fetch(url, { method: 'GET' })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n         const rows: TFirstName[] = data\r\n\r\n         return rows\r\n      })\r\n      .catch((err) => {\r\n         // eslint-disable-next-line no-console\r\n         console.error(`no database >>> ${err}`)\r\n         throw err\r\n      })\r\n   return r\r\n}\r\n\r\nconst getLastnames = async (url: string): Promise<TLastName[]> => {\r\n   const r: TLastName[] = await fetch(url, { method: 'GET' })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n         const rows: TLastName[] = data\r\n\r\n         return rows\r\n      })\r\n      .catch((err) => {\r\n         // eslint-disable-next-line no-console\r\n         console.error(`no database >>> ${err}`)\r\n         throw err\r\n      })\r\n   return r\r\n}\r\n","import { Checkbox, FormControlLabel, Grid, Paper, TextField, TextFieldProps } from '@material-ui/core'\r\nimport React from 'react'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nconst varient = 'standard'\r\n\r\n// number input type is being used for integers only\r\n// checkbox is used for boolean datatype\r\nconst implementedInputTypes = ['decimal', 'float', 'number', 'dateTime-local', 'date', 'email', 'checkbox', 'text']\r\n\r\nfunction NumberFormatCustomFixed2(props: any) {\r\n   const { inputRef, onChange, ...other } = props\r\n\r\n   return (\r\n      <NumberFormat\r\n         {...other}\r\n         getInputRef={inputRef}\r\n         onChange={onChange}\r\n         decimalScale={2}\r\n         fixedDecimalScale\r\n         thousandSeparator\r\n         isNumericString\r\n      />\r\n   )\r\n}\r\n\r\nfunction NumberFormatCustomFloat(props: any) {\r\n   const { inputRef, onChange, ...other } = props\r\n\r\n   return <NumberFormat {...other} getInputRef={inputRef} onChange={onChange} isNumericString />\r\n}\r\n\r\n/*\r\ninterface IProps {\r\n   fullWidth: boolean\r\n   label: string\r\n   value: any\r\n   required: boolean\r\n   onChange: any\r\n   name: string\r\n   id: string\r\n   type: string\r\n   InputLabelProps: any\r\n}\r\n*/\r\n\r\ntype SwitchTextFieldProps = Omit<TextFieldProps, 'InputProps'> & { type: string; onChange: any; value: any }\r\n\r\nconst SwitchTextField = (props: SwitchTextFieldProps) => {\r\n   const { type, value, label } = props\r\n   if (!implementedInputTypes.includes(type)) {\r\n      return (\r\n         <Grid justify=\"center\">\r\n            <Paper variant=\"outlined\">type {type} is not implemented</Paper>\r\n         </Grid>\r\n      )\r\n   }\r\n\r\n   // inputComponent undefined is ok\r\n   let inputComponent\r\n   if (type === 'decimal') {\r\n      inputComponent = NumberFormatCustomFixed2\r\n   } else if (type === 'float') {\r\n      inputComponent = NumberFormatCustomFloat\r\n   }\r\n\r\n   if (type === 'checkbox') {\r\n      return (\r\n         <Paper elevation={3} square style={{ margin: 0, borderBottom: '1px solid' }}>\r\n            <FormControlLabel\r\n               control={<Checkbox id={props.id} onClick={props.onChange} color=\"primary\" checked={value} />}\r\n               label={label}\r\n            />\r\n         </Paper>\r\n      )\r\n   }\r\n   return (\r\n      <Paper elevation={3} variant=\"elevation\">\r\n         <TextField\r\n            variant={varient}\r\n            InputProps={{\r\n               inputComponent,\r\n            }}\r\n            {...props}\r\n         />\r\n      </Paper>\r\n   )\r\n}\r\nexport default SwitchTextField\r\n","/* eslint-disable react/require-default-props */\r\n/* eslint-disable guard-for-in */\r\n/* eslint-disable no-restricted-syntax */\r\nimport { Button, Card, CardContent, createStyles, Grid, makeStyles, Paper, Typography } from '@material-ui/core'\r\nimport { DataGrid, DataGridProps, GridColDef, GridColumns, GridRowsProp } from '@material-ui/data-grid'\r\nimport React, { useEffect, useState } from 'react'\r\nimport SwitchTextField from '../Controls/SwitchTextField'\r\n\r\ntype TField = {\r\n   name: string\r\n   modelType: string\r\n   inputType: string\r\n   inputShrink: boolean\r\n   colType: string\r\n   required: boolean\r\n   readOnly: boolean\r\n   label: string\r\n   width: number\r\n   value: any\r\n}\r\n\r\nconst getRows = async (url: string): Promise<GridRowsProp> => {\r\n   const r: GridRowsProp = await fetch(url, { method: 'GET' })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n         const rows: GridRowsProp = data\r\n\r\n         return rows\r\n      })\r\n      .catch((err) => {\r\n         // eslint-disable-next-line no-console\r\n         console.error(`no database >>> ${err}`)\r\n         throw err\r\n      })\r\n   return r\r\n}\r\n\r\nconst getColumns = async (url: string): Promise<GridColumns> => {\r\n   const metaFields: TField[] = await getMetaFields(url)\r\n   const _cols: GridColumns = metaFields.map((f) => {\r\n      const col: GridColDef = {\r\n         field: f.name,\r\n         headerName: f.label,\r\n         type: f.colType,\r\n      }\r\n      return col\r\n   })\r\n   return _cols\r\n}\r\n\r\nconst getMetaFields = async (url: string): Promise<TField[]> => {\r\n   const f: TField[] = await fetch(url, { method: 'OPTIONS' })\r\n      .then((response) => response.json())\r\n      .then((metaData) => {\r\n         const meta = metaData.actions.POST\r\n         const fields: TField[] = []\r\n         for (const prop in meta) {\r\n            const detail = meta[prop]\r\n            const fieldDef: TField = {\r\n               name: prop,\r\n               modelType: detail.type,\r\n               inputType: detail.type,\r\n               inputShrink: true,\r\n               colType: 'string',\r\n               required: detail.required,\r\n               readOnly: detail.read_only,\r\n               label: detail.label,\r\n               width: 350,\r\n               value: '',\r\n            }\r\n            switch (detail.type) {\r\n               case 'integer':\r\n                  fieldDef.inputType = 'number'\r\n                  fieldDef.colType = 'number'\r\n                  break\r\n               case 'decimal':\r\n                  fieldDef.colType = 'number'\r\n                  break\r\n               case 'float':\r\n                  fieldDef.colType = 'number'\r\n                  break\r\n               case 'boolean':\r\n                  fieldDef.inputType = 'checkbox'\r\n                  fieldDef.value = false\r\n                  break\r\n               case 'datetime':\r\n                  fieldDef.inputType = 'dateTime-local'\r\n                  fieldDef.colType = 'dateTime'\r\n                  fieldDef.width = 300\r\n                  break\r\n               case 'date':\r\n                  fieldDef.width = 300\r\n                  break\r\n               case 'string':\r\n                  fieldDef.inputType = 'text'\r\n                  break\r\n               case 'email':\r\n                  fieldDef.colType = 'string'\r\n                  break\r\n               case 'file upload':\r\n                  fieldDef.width = 300\r\n                  fieldDef.colType = 'string'\r\n                  break\r\n               default:\r\n                  break\r\n            }\r\n\r\n            fields.push(fieldDef)\r\n         }\r\n         return fields\r\n      })\r\n\r\n   return f\r\n}\r\n\r\ndeclare type RestViewGridProps = Omit<DataGridProps, 'columns' | 'rows'> & {\r\n   url: string\r\n   columns?: GridColumns\r\n   rows?: GridRowsProp\r\n}\r\n\r\nconst RestForm = (props: RestViewGridProps) => {\r\n   const { url, columns, rows, ...other } = props\r\n\r\n   const useStyles = makeStyles(() =>\r\n      createStyles({\r\n         wordwrap: {\r\n            overflowWrap: 'anywhere',\r\n         },\r\n      })\r\n   )\r\n\r\n   const emptyMeta: TField[] = []\r\n   const emptyRep = { ok: false, statusText: '', url: '' }\r\n   const [metaFields, setMetaFields] = useState<TField[]>(emptyMeta)\r\n   const [newData, setNewData] = useState('')\r\n   const [resp, setResp] = useState(emptyRep)\r\n   const classes = useStyles()\r\n   const emptyCols: GridColumns = []\r\n   const emptyRows: GridRowsProp = []\r\n   const [cols, setCols] = useState(emptyCols)\r\n   const [_rows, setRows] = useState(emptyRows)\r\n\r\n   useEffect(() => {\r\n      if (cols === emptyCols) {\r\n         if (columns) {\r\n            setCols(columns)\r\n         } else {\r\n            getColumns(url).then((c) => {\r\n               setCols(c)\r\n            })\r\n         }\r\n\r\n         if (rows) {\r\n            setRows(rows)\r\n         } else {\r\n            getRows(url).then((r) => {\r\n               setRows(r)\r\n            })\r\n         }\r\n      }\r\n   }, [])\r\n\r\n   useEffect(() => {\r\n      if (metaFields === emptyMeta) {\r\n         getMetaFields(url)\r\n            .then((c) => {\r\n               setMetaFields(c)\r\n            })\r\n            .catch(() => {})\r\n      }\r\n   })\r\n\r\n   const handleRowSelected = (e: any) => {\r\n      setMetaFields(\r\n         metaFields.map((field) => {\r\n            const updataField: TField = field\r\n            updataField.value = e.data[field.name] ? e.data[field.name] : ''\r\n            return updataField\r\n         })\r\n      )\r\n   }\r\n\r\n   const handleChange = (event: any) => {\r\n      // event.preventDefault()\r\n      // event.persist()\r\n      let { value } = event.target\r\n      const { type, id, checked } = event.target\r\n      const index = parseInt(id, 10)\r\n\r\n      setMetaFields((prev) => {\r\n         // return untouched all the items that don't match index\r\n         return prev.map((item, i) => {\r\n            if (i !== index) {\r\n               return item\r\n            }\r\n            // for the one item that does match the index\r\n            // do any special handling of event.target.value\r\n            if (type === 'checkbox') {\r\n               value = checked\r\n            }\r\n\r\n            // update the matching item and return result to setMetaFields\r\n            return {\r\n               ...item,\r\n               value,\r\n            }\r\n         })\r\n      })\r\n   }\r\n\r\n   const handleSubmit = async (event: any) => {\r\n      event.preventDefault()\r\n\r\n      // Make an array of read-only fields that have an assigne value\r\n      // If there is anyhting in this array then the read-only primary key field\r\n      // been assigned a value which only happens if this should be an update operation.\r\n      const primaryKeyFieldArray = metaFields\r\n         .filter((field) => field.value && field.readOnly)\r\n         .map((field) => {\r\n            return {\r\n               name: field.name,\r\n               value: field.value,\r\n            }\r\n         })\r\n\r\n      let pk: number = 0\r\n      const isUpdate = primaryKeyFieldArray.length > 0\r\n\r\n      if (isUpdate) {\r\n         pk = primaryKeyFieldArray[0].value\r\n      }\r\n\r\n      let stripFormat = metaFields\r\n         .filter((field) => !field.readOnly)\r\n         .map((field) => {\r\n            const stripped = {\r\n               name: field.name,\r\n               value: field.value,\r\n            }\r\n            if (field.inputType === 'decimal' && field.value) {\r\n               stripped.value = stripped.value.replaceAll(',', '')\r\n               stripped.value = stripped.value.replaceAll('$', '')\r\n               stripped.value = stripped.value.replaceAll(' ', '')\r\n               stripped.value = parseFloat(stripped.value)\r\n            }\r\n            if (field.inputType === 'number' && field.value) {\r\n               stripped.value = parseInt(stripped.value, 10)\r\n            }\r\n            if (stripped.value === '') {\r\n               stripped.value = null\r\n            }\r\n            return stripped\r\n         })\r\n\r\n      stripFormat = stripFormat.concat(primaryKeyFieldArray)\r\n\r\n      const isValid = validate()\r\n      if (isValid) {\r\n         const data = stripFormat.reduce((acc, cur) => ({ ...acc, [cur.name]: cur.value }), {})\r\n         setNewData(JSON.stringify(data))\r\n         let urlX = url\r\n         let method = 'POST'\r\n\r\n         if (isUpdate) {\r\n            urlX = `${url}update/${pk}`\r\n            method = 'PUT'\r\n         }\r\n         const requestOptions = {\r\n            method,\r\n            //    headers: { 'Content-Type': 'application/json', 'X-CSRFToken': await getCsrfToken() },\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n         }\r\n         try {\r\n            const response = await fetch(urlX, requestOptions)\r\n            setResp(response)\r\n\r\n            getRows(url).then((r) => {\r\n               setRows(r)\r\n            })\r\n         } catch (error) {\r\n            // eslint-disable-next-line no-console\r\n            console.log(error)\r\n         }\r\n      }\r\n   }\r\n   //  TO DO: implement form level validation\r\n   const validate = () => {\r\n      return true\r\n   }\r\n\r\n   return (\r\n      <Paper elevation={0}>\r\n         <Grid container>\r\n            <Grid item xs={8} sm={5} md={4} lg={3} xl={2}>\r\n               <form onSubmit={handleSubmit}>\r\n                  {metaFields.map((item, index) => (\r\n                     <div key={item.name}>\r\n                        {item.readOnly ? (\r\n                           <Paper variant=\"outlined\">\r\n                              <span>{`${item.name} : ${item.value}`}</span>\r\n                           </Paper>\r\n                        ) : (\r\n                           <SwitchTextField\r\n                              label={item.label}\r\n                              type={item.inputType}\r\n                              fullWidth={true}\r\n                              value={item.value}\r\n                              required={item.required}\r\n                              onChange={handleChange}\r\n                              id={index.toString()}\r\n                              name={item.name}\r\n                              InputLabelProps={{\r\n                                 shrink: item.inputShrink,\r\n                              }}\r\n                           />\r\n                        )}\r\n                     </div>\r\n                  ))}\r\n\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                     submit\r\n                  </Button>\r\n\r\n                  <Card>\r\n                     <CardContent>\r\n                        <Typography color=\"textPrimary\" gutterBottom>\r\n                           Data sent:\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\" gutterBottom className={classes.wordwrap}>\r\n                           {newData}\r\n                        </Typography>\r\n                        <Typography color=\"textPrimary\" gutterBottom>\r\n                           Response:\r\n                        </Typography>\r\n                        <Typography>{`Status Text: ${resp.statusText}`}</Typography>\r\n                        <Typography>{`URL: ${resp.url}`}</Typography>\r\n                     </CardContent>\r\n                  </Card>\r\n               </form>\r\n            </Grid>\r\n            <Grid item xs={12} sm={7} md={8} lg={9} xl={10}>\r\n               <DataGrid onRowSelected={handleRowSelected} rows={_rows} columns={cols} {...other} />\r\n            </Grid>\r\n         </Grid>\r\n      </Paper>\r\n   )\r\n}\r\nexport default RestForm\r\n","/* eslint-disable no-unused-vars */\r\nimport { AppBar, Box, createStyles, makeStyles, Paper, Tab, Tabs, Theme } from '@material-ui/core'\r\nimport React from 'react'\r\nimport env from '../../SecuredComponents/Login/Env'\r\nimport RestForm from '../RestFormGrid/RestFormGrid'\r\n\r\n// const cols: GridColumns = [{ field: 'myemail', width: 250, headerName: 'Email Address' }, { field: 'id' }]\r\n\r\nconst RestCrud = () => {\r\n   const [value, setValue] = React.useState(0)\r\n\r\n   const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n      setValue(newValue)\r\n   }\r\n   const useStyles = makeStyles((theme: Theme) =>\r\n      createStyles({\r\n         root: {\r\n            padding: '2px',\r\n         },\r\n         form: {\r\n            marginBottom: theme.spacing(2),\r\n            marginRight: theme.spacing(1),\r\n            marginLeft: 5,\r\n            minWidth: '215px',\r\n         },\r\n         data: {\r\n            marginBottom: theme.spacing(2),\r\n            minHeight: '400px',\r\n\r\n            color: theme.palette.text.secondary,\r\n         },\r\n         dataPaper: {\r\n            marginBottom: theme.spacing(2),\r\n            minHeight: '400px',\r\n            background: theme.palette.background.default,\r\n         },\r\n      })\r\n   )\r\n   const classes = useStyles()\r\n\r\n   interface TabPanelProps {\r\n      children?: React.ReactNode\r\n      index: any\r\n      value: any\r\n   }\r\n\r\n   function TabPanel(props: TabPanelProps) {\r\n      const { children, index, ...other } = props\r\n\r\n      return (\r\n         <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}>\r\n            {value === index && <Box>{children}</Box>}\r\n         </div>\r\n      )\r\n   }\r\n\r\n   function a11yProps(index: any) {\r\n      return {\r\n         id: `simple-tab-${index}`,\r\n         'aria-controls': `simple-tabpanel-${index}`,\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <AppBar position=\"static\">\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n               <Tab label=\"Demo\" {...a11yProps(0)} />\r\n               <Tab label=\"Instalation\" {...a11yProps(1)} />\r\n               <Tab label=\"Usage\" {...a11yProps(2)} />\r\n            </Tabs>\r\n         </AppBar>\r\n         <TabPanel value={value} index={0}>\r\n            <Paper className={classes.dataPaper}>\r\n               <RestForm url={`${env().API_HOST}/api/`} density=\"compact\" autoHeight pageSize={10} />\r\n            </Paper>\r\n         </TabPanel>\r\n         <TabPanel value={value} index={1}>\r\n            To Do: Instalations instructions\r\n         </TabPanel>\r\n         <TabPanel value={value} index={2}>\r\n            To Do: Usage notes\r\n         </TabPanel>\r\n      </div>\r\n   )\r\n}\r\nexport default RestCrud\r\n","import { createStyles, Divider, Grid, makeStyles, Paper, Theme, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { ValidatedLink } from '../Links/LinkUtil'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n   createStyles({\r\n      root: { maxWidth: 675, paddingLeft: 10, paddingRight: 10, paddingTop: 20, paddingBottom: 45 },\r\n      linkdesc: {\r\n         maxWidth: 500,\r\n      },\r\n      intro: { maxWidth: 625, paddingBottom: 10, paddingLeft: 30, paddingRight: 10 },\r\n      linkHeading: {\r\n         maxWidth: 600,\r\n         paddingBottom: 3,\r\n         fontWeight: 'bold',\r\n      },\r\n      linkLabel: {\r\n         color: theme.palette.info.contrastText,\r\n         fontStyle: 'italic',\r\n         fontWeight: 'bolder',\r\n      },\r\n   })\r\n)\r\n\r\ntype TlinkData = {\r\n   typeHeading: string\r\n   linkLabel: string\r\n   description: string\r\n}\r\n\r\nexport const linkData: TlinkData[] = [\r\n   {\r\n      typeHeading: 'Editor.  Free',\r\n      linkLabel: 'VSCode',\r\n      description:\r\n         'Visual Studio Code is a powerful source code editor. It is available for Windows, macOS and Linux. It comes with built-in support for JavaScript, TypeScript, Node.js, GitHub...',\r\n   },\r\n   {\r\n      typeHeading: 'Remote Host.  Free to Cheap',\r\n      linkLabel: 'pythonanywhere',\r\n      description:\r\n         'Super easy and cheap hosting built for django. MySQL is included for free. Plans start at free and go up in a flexible way from there. Downgrade to free any time you want.  Postgres is available at extra cost.',\r\n   },\r\n   {\r\n      typeHeading: 'Domain Name Registration. about $12 per year',\r\n      linkLabel: 'namecheap',\r\n      description: 'Absolutely not needed if you use pythonanywhere. This is kinda like buying vanity plates.',\r\n   },\r\n   {\r\n      typeHeading: 'Source control.  FREE',\r\n      linkLabel: 'GitHub',\r\n      description:\r\n         'More than source control, GitHub is a social media destination and rich eco-system. It is feature rich but easy to get started. GitHub is well supported by VSCode.',\r\n   },\r\n   {\r\n      typeHeading: 'Django (jang-gow the \"D\" is silent)  Open Source, FREE',\r\n      linkLabel: 'django',\r\n      description:\r\n         'A high-level backend (or server side) Python Web framework that does the heavy lifting required to access databases and other server resources.',\r\n   },\r\n   {\r\n      typeHeading: 'Django REST framework. Free',\r\n      linkLabel: 'Rest framework',\r\n      description: 'The Rest framework is build on top of django and adds some really good sugar.',\r\n   },\r\n\r\n   {\r\n      typeHeading: 'TypeScript a newer (and better) way to create JavaScript. Free',\r\n      linkLabel: 'TypeScript',\r\n      description:\r\n         'This is what all the cool kids are using. TypeScript is a super set of JavaScript that compiles back to JavaScript for the browser. The benefit of all this is that with TypeScript you can see more of your mistakes in your editor (VSCode or other) as soon as you make them instead of much later when you bump into them at runtime. TypeScript is easier for a human to read, the browser could care less.',\r\n   },\r\n   {\r\n      typeHeading: 'React. A JavaScript (or TypeScript) library for building user interfaces. Free',\r\n      linkLabel: 'React',\r\n      description:\r\n         'Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. This is a serious upgrade to AngularJS.',\r\n   },\r\n\r\n   {\r\n      typeHeading: 'Axios. Free',\r\n\r\n      linkLabel: 'axios on github',\r\n      description:\r\n         'Promise based HTTP client for the browser and node.js. (Used as an alternative to native Fetch api)',\r\n   },\r\n\r\n   {\r\n      typeHeading: 'Material-ui  Free (until it is not)',\r\n\r\n      linkLabel: 'material-ui',\r\n      description: 'Well documented React component library developed by Google in 2014. Great support for TypeScript.',\r\n   },\r\n]\r\n\r\nconst Stack = () => {\r\n   const classes = useStyles()\r\n\r\n   return (\r\n      <Paper elevation={0} className={classes.root}>\r\n         <Typography align=\"justify\" className={classes.intro}>\r\n            Part of the fun is developing a great technology stack. Think of the following as a reasonable starting\r\n            point on your quest for Nirvana.\r\n         </Typography>\r\n\r\n         <Divider />\r\n         <Grid container direction=\"column\" spacing={2}>\r\n            {linkData.map((link) => (\r\n               <Grid item>\r\n                  <Paper elevation={0} className={classes.linkHeading}>\r\n                     <Typography>{link.typeHeading}</Typography>\r\n                  </Paper>\r\n                  <Grid container direction=\"row\" spacing={3}>\r\n                     <Grid item xs={4} sm={3} md={3} lg={3} xl={3}>\r\n                        <Typography className={classes.linkLabel}>\r\n                           <ValidatedLink label={link.linkLabel} />\r\n                        </Typography>\r\n                     </Grid>\r\n                     <Grid item xs={8} sm={9} md={9} lg={9} xl={9}>\r\n                        <Paper elevation={0} className={classes.linkdesc}>\r\n                           <Typography>{link.description}</Typography>\r\n                        </Paper>\r\n                        <Divider />\r\n                     </Grid>\r\n                  </Grid>\r\n               </Grid>\r\n            ))}\r\n         </Grid>\r\n      </Paper>\r\n   )\r\n}\r\nexport default Stack\r\n","import { Button, DialogActions, DialogContent, DialogContentText, TextField } from '@material-ui/core'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport axios from 'axios'\r\nimport React, { useContext, useState } from 'react'\r\n\r\nimport env from '../../SecuredComponents/Login/Env'\r\nimport UserContext from '../Context/UserContext'\r\n\r\nexport interface LoginDialogProps {\r\n   open: boolean\r\n\r\n   // eslint-disable-next-line no-unused-vars\r\n   onClose: (value: string) => void\r\n}\r\n\r\nexport default function LoginDialog(props: LoginDialogProps) {\r\n   const { onClose, open } = props\r\n   const [email, setEmail] = useState('d@dd.com')\r\n   const [password, setPassword] = useState('postman!!01')\r\n   const user = useContext(UserContext)\r\n\r\n   const handleCancel = () => {\r\n      onClose('selectedValue')\r\n   }\r\n\r\n   const handleLogout = () => {\r\n      user.token = null\r\n      user.hasToken = false\r\n      user.user = null\r\n      sessionStorage.removeItem('token')\r\n      sessionStorage.removeItem('email')\r\n      onClose('selectedValue')\r\n   }\r\n\r\n   const handleLogin = async () => {\r\n      axios\r\n         .post(`${env().API_HOST}/api/v1/users/auth/login/`, { email, password })\r\n         .then((response) => {\r\n            const token = response.data.key\r\n            sessionStorage.setItem('token', token)\r\n            sessionStorage.setItem('email', email)\r\n            user.token = token\r\n            user.hasToken = true\r\n            user.user = email\r\n            onClose(email)\r\n         })\r\n         .catch(() => {\r\n            onClose(email)\r\n         })\r\n   }\r\n\r\n   if (!user.hasToken) {\r\n      return (\r\n         <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n            <DialogContent>\r\n               <DialogContentText>\r\n                  To subscribe to this website, please enter your email address here. We will send updates occasionally.\r\n               </DialogContentText>\r\n               <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  label=\"Email Address\"\r\n                  type=\"email\"\r\n                  fullWidth\r\n               />\r\n               <TextField\r\n                  margin=\"dense\"\r\n                  id=\"password\"\r\n                  label=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  type=\"password\"\r\n                  fullWidth\r\n               />\r\n            </DialogContent>\r\n            <DialogActions>\r\n               <Button onClick={handleCancel} color=\"primary\">\r\n                  Cancel\r\n               </Button>\r\n               <Button onClick={handleLogin} color=\"primary\">\r\n                  Login\r\n               </Button>\r\n            </DialogActions>\r\n         </Dialog>\r\n      )\r\n   }\r\n   return (\r\n      <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n         <DialogTitle id=\"form-dialog-title\">Logout</DialogTitle>\r\n         <DialogContent>\r\n            <DialogContentText>\r\n               To subscribe to this website, please enter your email address here. We will send updates occasionally.\r\n            </DialogContentText>\r\n            <TextField\r\n               disabled={true}\r\n               margin=\"dense\"\r\n               id=\"email\"\r\n               value={email}\r\n               label=\"Email Address\"\r\n               type=\"email\"\r\n               fullWidth\r\n            />\r\n            <TextField\r\n               disabled={true}\r\n               margin=\"dense\"\r\n               id=\"password\"\r\n               label=\"Password\"\r\n               value={password}\r\n               type=\"password\"\r\n               fullWidth\r\n            />\r\n         </DialogContent>\r\n         <DialogActions>\r\n            <Button onClick={handleCancel} color=\"primary\">\r\n               Cancel\r\n            </Button>\r\n\r\n            <Button onClick={handleLogout} color=\"primary\">\r\n               Logout\r\n            </Button>\r\n         </DialogActions>\r\n      </Dialog>\r\n   )\r\n}\r\n","import { Paper, withWidth, WithWidth } from '@material-ui/core'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { createStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4'\r\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh'\r\nimport ExpandLess from '@material-ui/icons/ExpandLess'\r\nimport ExpandMore from '@material-ui/icons/ExpandMore'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport React, { useContext, useState } from 'react'\r\nimport env from '../../SecuredComponents/Login/Env'\r\nimport Test from '../../SecuredComponents/Test'\r\n\r\nimport { createMyTheme, makeMyStyles } from '../../Themes/createMyTheme'\r\nimport BoxBuilder from '../BoxBuilder/BoxBuilder'\r\nimport MyEditor from '../ContactUs/ContactUs'\r\nimport UserContext from '../Context/UserContext'\r\nimport GettingStarted from '../GettingStarted/GettingStarted'\r\nimport Home from '../Home/Home'\r\nimport RandomValues from '../RandomNames/RandomNames'\r\nimport RestCrud from '../RestCrud/RestCrud'\r\nimport Stack from '../Stack/Stack'\r\nimport LoginDialog from './LoginDialog'\r\n\r\nconst drawerWidth = 150\r\n\r\nconst ResponsiveDrawer = (props: WithWidth) => {\r\n   const { width } = props\r\n\r\n   const [brigtness, setBrightness] = useState('dark')\r\n   const appliedTheme = createMyTheme(brigtness)\r\n   const myStyles = makeMyStyles(appliedTheme, drawerWidth)\r\n   const useStyles = makeStyles(() => createStyles(myStyles))\r\n   const classes = useStyles()\r\n   const [mobileOpen, setMobileOpen] = useState(false)\r\n   const [open, setOpen] = useState(false)\r\n   const [showing, setShowing] = useState('Home')\r\n   const [showGalleryChildren, setShowGalleryChildren] = useState(false)\r\n   const user = useContext(UserContext)\r\n\r\n   const handleToggleShowGalleryChildren = () => {\r\n      setShowGalleryChildren(!showGalleryChildren)\r\n   }\r\n\r\n   document.body.style.backgroundColor = appliedTheme.palette.background.paper\r\n\r\n   const handleDrawerToggle = () => {\r\n      setMobileOpen(!mobileOpen)\r\n   }\r\n\r\n   const handleClose = (x: string) => {\r\n      // eslint-disable-next-line no-console\r\n      console.log(x)\r\n\r\n      setOpen(false)\r\n   }\r\n\r\n   const handleThemeToggle = (event: any, newValue: string) => {\r\n      setBrightness(newValue)\r\n   }\r\n\r\n   const handleListItemClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>, index: string) => {\r\n      setShowing(index)\r\n      setMobileOpen(false)\r\n   }\r\n\r\n   const drawer = () => {\r\n      return (\r\n         <div>\r\n            <Divider />\r\n            <List>\r\n               {['Home', 'Getting Started', 'Stack', 'Contact Us'].map((text) => (\r\n                  <ListItem onClick={(event) => handleListItemClick(event, text)} button key={text}>\r\n                     <ListItemText primary={text} />\r\n                  </ListItem>\r\n               ))}\r\n            </List>\r\n            <Divider />\r\n            <List component=\"nav\">\r\n               <ListItem button onClick={handleToggleShowGalleryChildren}>\r\n                  <ListItemText primary=\"Gallery\" />\r\n                  {showGalleryChildren ? <ExpandLess /> : <ExpandMore />}\r\n               </ListItem>\r\n               <Collapse in={showGalleryChildren} timeout=\"auto\" unmountOnExit>\r\n                  <List component=\"div\" disablePadding>\r\n                     {['RestGrid', 'Random', 'BoxBuilder', 'Secure'].map((text) => (\r\n                        <ListItem\r\n                           style={{ paddingLeft: 26 }}\r\n                           onClick={(event) => handleListItemClick(event, text)}\r\n                           button\r\n                           key={text}>\r\n                           <ListItemText primary={text} />\r\n                        </ListItem>\r\n                     ))}\r\n                  </List>\r\n               </Collapse>\r\n            </List>\r\n         </div>\r\n      )\r\n   }\r\n\r\n   return (\r\n      <UserContext.Consumer>\r\n         {(u) => (\r\n            <ThemeProvider theme={appliedTheme}>\r\n               <Paper elevation={0} className={classes.root}>\r\n                  <AppBar position=\"fixed\" className={classes.appBar}>\r\n                     <Toolbar>\r\n                        <IconButton\r\n                           color=\"inherit\"\r\n                           aria-label=\"open drawer\"\r\n                           edge=\"start\"\r\n                           onClick={handleDrawerToggle}\r\n                           className={classes.menuButton}>\r\n                           <MenuIcon />\r\n                        </IconButton>\r\n                        {brigtness === 'light' ? (\r\n                           <Tooltip title=\"Use dark theme\">\r\n                              <IconButton\r\n                                 className={classes.brightness}\r\n                                 color=\"inherit\"\r\n                                 aria-label=\"Dark Theme\"\r\n                                 edge=\"start\"\r\n                                 onClick={(event) => handleThemeToggle(event, 'dark')}>\r\n                                 <Brightness4Icon />\r\n                              </IconButton>\r\n                           </Tooltip>\r\n                        ) : null}\r\n                        {brigtness === 'dark' ? (\r\n                           <Tooltip title=\"Use light theme\">\r\n                              <IconButton\r\n                                 className={classes.brightness}\r\n                                 color=\"inherit\"\r\n                                 aria-label=\"Light Theme\"\r\n                                 edge=\"start\"\r\n                                 onClick={(event) => handleThemeToggle(event, 'light')}>\r\n                                 <BrightnessHighIcon />\r\n                              </IconButton>\r\n                           </Tooltip>\r\n                        ) : null}\r\n                        {!u.hasToken ? (\r\n                           <Tooltip title=\"Login\">\r\n                              <IconButton\r\n                                 className={classes.clearToken}\r\n                                 color=\"inherit\"\r\n                                 aria-label=\"login\"\r\n                                 edge=\"start\"\r\n                                 onClick={() => setOpen(true)}>\r\n                                 <PermIdentityIcon />\r\n                              </IconButton>\r\n                           </Tooltip>\r\n                        ) : null}\r\n                        {u.hasToken ? (\r\n                           <Tooltip title=\"Logout\">\r\n                              <IconButton\r\n                                 className={classes.clearToken}\r\n                                 color=\"inherit\"\r\n                                 aria-label=\"clear login token\"\r\n                                 edge=\"start\"\r\n                                 onClick={() => setOpen(true)}>\r\n                                 <PersonIcon />\r\n                              </IconButton>\r\n                           </Tooltip>\r\n                        ) : null}\r\n\r\n                        <LoginDialog open={open} onClose={handleClose} />\r\n\r\n                        <Typography variant=\"h6\" noWrap>\r\n                           Rest-React {u.user}\r\n                        </Typography>\r\n                     </Toolbar>\r\n                  </AppBar>\r\n                  <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                     <Hidden mdUp implementation=\"css\">\r\n                        <Drawer\r\n                           variant=\"temporary\"\r\n                           anchor={appliedTheme.direction === 'rtl' ? 'right' : 'left'}\r\n                           disableAutoFocus\r\n                           open={mobileOpen}\r\n                           onClose={handleDrawerToggle}\r\n                           classes={{\r\n                              paper: classes.drawerPaper,\r\n                           }}\r\n                           ModalProps={{\r\n                              keepMounted: true, // Better open performance on mobile.\r\n                           }}>\r\n                           {drawer()}\r\n                        </Drawer>\r\n                     </Hidden>\r\n                     <Hidden smDown implementation=\"css\">\r\n                        <Drawer\r\n                           classes={{\r\n                              paper: classes.drawerPaper,\r\n                           }}\r\n                           variant=\"permanent\"\r\n                           open>\r\n                           {drawer()}\r\n                        </Drawer>\r\n                     </Hidden>\r\n                  </nav>\r\n               </Paper>\r\n               <div className={classes.appBar}>\r\n                  <div className={classes.toolbar} />\r\n\r\n                  {showing === 'Home' ? <Home /> : null}\r\n                  {showing === 'Stack' ? <Stack /> : null}\r\n                  {showing === 'Getting Started' ? <GettingStarted /> : null}\r\n                  {showing === 'RestGrid' ? <RestCrud /> : null}\r\n                  {showing === 'Random' ? <RandomValues url={`${env().API_HOST}/api/`} /> : null}\r\n                  {showing === 'BoxBuilder' ? <BoxBuilder /> : null}\r\n                  {showing === 'Contact Us' ? <MyEditor /> : null}\r\n                  {showing === 'Secure' ? <Test user={user} /> : null}\r\n               </div>\r\n               <Divider />\r\n               <div className={classes.appBar2}>\r\n                  <Typography align=\"justify\">{width}</Typography>\r\n               </div>\r\n            </ThemeProvider>\r\n         )}\r\n      </UserContext.Consumer>\r\n   )\r\n}\r\nexport default withWidth()(ResponsiveDrawer)\r\n","import { teal } from '@material-ui/core/colors'\r\nimport { createMuiTheme, createStyles, Theme, ThemeOptions } from '@material-ui/core/styles'\r\n\r\nexport const createMyTheme = (brigtness: string) => {\r\n   const darkThemeCfg: ThemeOptions = {\r\n      palette: {\r\n         type: 'dark',\r\n         background: {\r\n            paper: '#424242',\r\n            default: '#212121',\r\n         },\r\n         info: {\r\n            dark: '#212121',\r\n            main: '#212121',\r\n            light: '#616161',\r\n            contrastText: '#FFF59D',\r\n         },\r\n      },\r\n      overrides: {\r\n         MuiLink: {\r\n            root: {\r\n               color: '#FFF59D',\r\n               fontStyle: 'italic',\r\n               fontWeight: 'bolder',\r\n            },\r\n         },\r\n      },\r\n   }\r\n\r\n   const lightThemeCfg: ThemeOptions = {\r\n      palette: {\r\n         type: 'light',\r\n         primary: teal,\r\n         info: {\r\n            dark: '#4DB6AC',\r\n            main: '#80CBC4',\r\n            light: '#B2DFDB',\r\n            contrastText: '#004D40',\r\n         },\r\n         background: {\r\n            default: '#b2dfdb',\r\n            paper: '#e0f2f1',\r\n         },\r\n      },\r\n      overrides: {\r\n         MuiLink: {\r\n            root: {\r\n               color: '#1A237E',\r\n               fontStyle: 'italic',\r\n               fontWeight: 'bolder',\r\n            },\r\n         },\r\n      },\r\n   }\r\n\r\n   const options = brigtness === 'light' ? lightThemeCfg : darkThemeCfg\r\n   return createMuiTheme({\r\n      ...options,\r\n   })\r\n}\r\n\r\nexport const makeMyStyles = (theme: Theme, drawerWidth: number) => {\r\n   return createStyles({\r\n      root: {\r\n         display: 'flex',\r\n      },\r\n      drawer: {\r\n         [theme.breakpoints.up('md')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n         },\r\n      },\r\n      appBar: {\r\n         [theme.breakpoints.up('md')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n         },\r\n      },\r\n\r\n      appBar2: {\r\n         position: 'fixed',\r\n         bottom: '0',\r\n         height: '30px',\r\n         paddingLeft: theme.spacing(2),\r\n         background: '#36363a',\r\n         width: '100%',\r\n         [theme.breakpoints.up('md')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n         },\r\n      },\r\n      menuButton: {\r\n         marginRight: theme.spacing(2),\r\n         [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n         },\r\n      },\r\n      brightness: {\r\n         marginRight: theme.spacing(2),\r\n         position: 'absolute',\r\n         right: 0,\r\n      },\r\n      clearToken: {\r\n         marginRight: theme.spacing(2),\r\n         position: 'absolute',\r\n         right: 40,\r\n      },\r\n      // necessary for content to be below app bar\r\n      toolbar: theme.mixins.toolbar,\r\n\r\n      drawerPaper: {\r\n         width: drawerWidth,\r\n         background: theme.palette.background.default,\r\n      },\r\n      main: {\r\n         background: '#424242',\r\n      },\r\n      content: {\r\n         flexGrow: 1,\r\n         padding: theme.spacing(3),\r\n      },\r\n   })\r\n}\r\n","import { Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './Components/App/App2'\r\nimport UserContext, { defaultUser } from './Components/Context/UserContext'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n      <Paper>\r\n         <UserContext.Provider value={defaultUser}>\r\n            <App />\r\n         </UserContext.Provider>\r\n      </Paper>\r\n   </React.StrictMode>,\r\n   document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}