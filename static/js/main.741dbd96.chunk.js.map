{"version":3,"sources":["Components/Dashboard/Dashboard.tsx","Components/Login/Env.tsx","Components/Login/getCsrfToken.tsx","Components/Login/Login.tsx","Components/Preferences/Preferences.tsx","Components/App/App.tsx","Components/App/useToken.tsx","index.tsx"],"names":["Dashboard","env","d","API_HOST","getCsrfToken","a","undefined","_csrfToken","sessionStorage","getItem","fetch","credentials","response","json","data","csrfToken","setItem","loginUser","method","userpass","JSON","stringify","headers","body","key","Login","setToken","useState","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","token","className","onSubmit","type","onChange","target","value","process","defaultValue","REACT_APP_NOT_SECRET_CODE","Preferences","App","tokenString","console","log","parse","getToken","userToken","useToken","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAEe,SAASA,IACrB,OAAO,2C,oCCMKC,EATH,WACT,IAAMC,EAAI,CAAEC,SAAU,sCAMtB,OAFGD,EAAEC,SAAW,qCAETD,GCaKE,EAlBG,uCAAG,gCAAAC,EAAA,8DAECC,KADfC,EAAaC,eAAeC,QAAQ,gBACO,OAAfF,EAFd,gCAGQG,MAAM,GAAD,OAAIT,IAAME,SAAV,UAA4B,CACrDQ,YAAa,YAJD,cAGTC,EAHS,gBAMIA,EAASC,OANb,OAMTC,EANS,OAOfP,EAAaO,EAAKC,UAPH,cAUC,OAAfR,EACDA,EAAa,WAEbC,eAAeQ,QAAQ,aAAcT,GAbtB,kBAgBXA,GAhBW,4CAAH,qD,eCWHU,E,gFAAf,WAAyBC,EAAqBC,GAA9C,iBAAAd,EAAA,8DAC0BK,MAD1B,eACmCT,IAAME,SADzC,kCAEMe,EACoB,SAAXA,EAHf,iCAG8Fd,IAH9F,yBAGqC,eAAgB,mBAAoB,cAHzE,mCAGiH,GAHjH,8BAKYgB,KAAKC,UAAUF,GAL3B,MAEMD,OAFN,KAGMI,QAHN,KAIMX,YAAa,UACbY,KALN,mDACSX,EADT,iBAOsBA,EAASC,OAP/B,eAOSC,EAPT,yBAUUA,EAAKU,KAVf,6C,sBAae,SAASC,EAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,SAAiB,EACpBC,mBAAiB,IADG,mBACvCC,EADuC,KAChCC,EADgC,OAEdF,mBAAiB,IAFH,mBAEvCG,EAFuC,KAE7BC,EAF6B,KAIxCC,EAAY,uCAAG,WAAOC,GAAP,eAAA5B,EAAA,6DAClB4B,EAAEC,iBADgB,SAEEjB,EAAU,OAAQ,CAAEW,QAAOE,aAF7B,OAEZK,EAFY,OAGlBT,EAASS,GAHS,2CAAH,sDAMlB,OACG,sBAAKC,UAAU,gBAAf,UACG,+CACA,uBAAMC,SAAUL,EAAhB,UACG,kCACG,yCACA,uBAAOM,KAAK,OAAOC,SAAU,SAACN,GAAD,OAAOJ,EAASI,EAAEO,OAAOC,aAEzD,kCACG,yCACA,uBAAOH,KAAK,WAAWC,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAEO,OAAOC,aAEhE,8BACG,wBAAQH,KAAK,SAAb,yBAGN,gCACG,yEACuC,4BAAII,eAD3C,YAGA,+BACG,uBAAOJ,KAAK,SAASK,aAAcD,mIAAYE,oCCvD/C,SAASC,IACrB,OAAO,6C,MC4BKC,MAvBf,WAAgB,IAAD,ECLA,WACZ,IADgC,EAaNnB,mBAZT,WACd,IAAMoB,EAAcvC,eAAeC,QAAQ,SAC3C,GAAoB,OAAhBsC,EAQJ,OAHAC,QAAQC,IAAIF,GAEZC,QAAQC,IAAI7B,KAAK8B,MAAMH,IAChB3B,KAAK8B,MAAMH,GAEcI,IAbH,mBAazBhB,EAbyB,KAalBT,EAbkB,KAmBhC,MAAO,CACJA,SALe,SAAC0B,GAChB5C,eAAeQ,QAAQ,QAASI,KAAKC,UAAU+B,IAC/C1B,EAAS0B,IAITjB,SDfyBkB,GAApBlB,EADI,EACJA,MAAOT,EADH,EACGA,SAEf,OAAKS,EAIF,sBAAKC,UAAU,UAAf,UACG,6CACA,cAAC,IAAD,UACG,eAAC,IAAD,WACG,cAAC,IAAD,CAAOkB,KAAK,aAAZ,SACG,cAACtD,EAAD,MAEH,cAAC,IAAD,CAAOsD,KAAK,eAAZ,SACG,cAACT,EAAD,cAXL,cAAC,EAAD,CAAOnB,SAAUA,K,MEP9B6B,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,W","file":"static/js/main.741dbd96.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Dashboard() {\r\n   return <h2>Dashboard</h2>\r\n}\r\n","const env = () => {\r\n   const d = { API_HOST: 'http://dbhausen.pythonanywhere.com' }\r\n   if (process.env.NODE_ENV === 'development') {\r\n      d.API_HOST = 'http://localhost:8000'\r\n   } else if (process.env.NODE_ENV === 'production') {\r\n      d.API_HOST = 'http://dbhausen.pythonanywhere.com'\r\n   }\r\n   return d\r\n}\r\nexport default env\r\n","import env from './Env'\r\n\r\nconst getCsrfToken = async () => {\r\n   let _csrfToken = sessionStorage.getItem('csrf_token')\r\n   if (_csrfToken === undefined || _csrfToken === null) {\r\n      const response = await fetch(`${env().API_HOST}/csrf/`, {\r\n         credentials: 'include',\r\n      })\r\n      const data = await response.json()\r\n      _csrfToken = data.csrfToken\r\n   }\r\n\r\n   if (_csrfToken === null) {\r\n      _csrfToken = 'NO_TOKEN'\r\n   } else {\r\n      sessionStorage.setItem('csrf_token', _csrfToken)\r\n   }\r\n\r\n   return _csrfToken\r\n}\r\nexport default getCsrfToken\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState } from 'react'\r\nimport env from './Env'\r\nimport getCsrfToken from './getCsrfToken'\r\nimport './Login.css'\r\n\r\ninterface ICredentials {\r\n   email: string\r\n   password: string\r\n}\r\n\r\ntype ThttpMethod = 'POST' | 'GET' | 'OPTIONS'\r\n\r\nasync function loginUser(method: ThttpMethod, userpass: ICredentials) {\r\n   const response = await fetch(`${env().API_HOST}/api/v1/users/auth/login/`, {\r\n      method,\r\n      headers: method === 'POST' ? { 'Content-Type': 'application/json', 'X-CSRFToken': await getCsrfToken() } : {},\r\n      credentials: 'include',\r\n      body: JSON.stringify(userpass),\r\n   })\r\n   const data = await response.json()\r\n   // needed to do some validation here to see if login was success\r\n   // handle errors\r\n   return data.key\r\n}\r\n\r\nexport default function Login({ setToken }: any) {\r\n   const [email, setEmail] = useState<string>('')\r\n   const [password, setPassword] = useState<string>('')\r\n\r\n   const handleSubmit = async (e: { preventDefault: () => void }) => {\r\n      e.preventDefault()\r\n      const token = await loginUser('POST', { email, password })\r\n      setToken(token)\r\n   }\r\n\r\n   return (\r\n      <div className=\"login-wrapper\">\r\n         <h1>Please Log In</h1>\r\n         <form onSubmit={handleSubmit}>\r\n            <label>\r\n               <p>Username</p>\r\n               <input type=\"text\" onChange={(e) => setEmail(e.target.value)} />\r\n            </label>\r\n            <label>\r\n               <p>Password</p>\r\n               <input type=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n            </label>\r\n            <div>\r\n               <button type=\"submit\">Submit</button>\r\n            </div>\r\n         </form>\r\n         <div>\r\n            <small>\r\n               You are running this application in <b>{process.env.NODE_ENV}</b> mode.\r\n            </small>\r\n            <form>\r\n               <input type=\"hidden\" defaultValue={process.env.REACT_APP_NOT_SECRET_CODE} />\r\n            </form>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Preferences() {\r\n   return <h2>Preferences</h2>\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Dashboard from '../Dashboard/Dashboard'\r\nimport Login from '../Login/Login'\r\nimport Preferences from '../Preferences/Preferences'\r\nimport './App.css'\r\nimport useToken from './useToken'\r\n\r\nfunction App() {\r\n   const { token, setToken } = useToken()\r\n\r\n   if (!token) {\r\n      return <Login setToken={setToken} />\r\n   }\r\n   return (\r\n      <div className=\"wrapper\">\r\n         <h1>Application</h1>\r\n         <BrowserRouter>\r\n            <Switch>\r\n               <Route path=\"/dashboard\">\r\n                  <Dashboard />\r\n               </Route>\r\n               <Route path=\"/preferences\">\r\n                  <Preferences />\r\n               </Route>\r\n            </Switch>\r\n         </BrowserRouter>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default App\r\n","import { useState } from 'react'\r\n\r\n// use 'localStorage' to persist between sessions\r\nexport default function useToken() {\r\n   const getToken = () => {\r\n      const tokenString = sessionStorage.getItem('token')\r\n      if (tokenString === null) {\r\n         return undefined\r\n      }\r\n\r\n      // eslint-disable-next-line no-console\r\n      console.log(tokenString)\r\n      // eslint-disable-next-line no-console\r\n      console.log(JSON.parse(tokenString))\r\n      return JSON.parse(tokenString)\r\n   }\r\n   const [token, setToken] = useState(getToken())\r\n\r\n   const saveToken = (userToken: { token: string }) => {\r\n      sessionStorage.setItem('token', JSON.stringify(userToken))\r\n      setToken(userToken)\r\n   }\r\n   return {\r\n      setToken: saveToken,\r\n      token,\r\n   }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './Components/App/App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n      <App />\r\n   </React.StrictMode>,\r\n   document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}